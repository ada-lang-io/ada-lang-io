"use strict";(self.webpackChunkada_lang_io=self.webpackChunkada_lang_io||[]).push([[4922],{1496:(e,r,a)=>{a.r(r),a.d(r,{assets:()=>x,contentTitle:()=>A,default:()=>p,frontMatter:()=>o,metadata:()=>n,toc:()=>j});const n=JSON.parse('{"id":"arm/AA-2/AA-2.5","title":"2.5 Character Literals","description":"This Reference Manual output has not been verified,","source":"@site/docs/arm/AA-2/AA-2.5.mdx","sourceDirName":"arm/AA-2","slug":"/arm/AA-2/AA-2.5","permalink":"/docs/arm/AA-2/AA-2.5","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":13,"frontMatter":{"sidebar_position":13},"sidebar":"referenceManualSidebar","previous":{"title":"2.4 Numeric Literals","permalink":"/docs/arm/AA-2/AA-2.4"},"next":{"title":"2.6 String Literals","permalink":"/docs/arm/AA-2/AA-2.6"}}');var s=a(4848),i=a(8453),t=a(3204),c=a(4220),l=a(8069),d=a(8011),h=a(6465);const o={sidebar_position:13},A="2.5 Character Literals",x={},j=[{value:"Syntax",id:"syntax",level:4},{value:"Examples",id:"examples",level:4},{value:"Wording Changes from Ada 83",id:"wording-changes-from-ada-83",level:4}];function m(e){const r={a:"a",admonition:"admonition",h1:"h1",h4:"h4",header:"header",p:"p",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.header,{children:(0,s.jsx)(r.h1,{id:"25-character-literals",children:"2.5 Character Literals"})}),"\n",(0,s.jsx)(r.admonition,{type:"danger",children:(0,s.jsxs)(r.p,{children:["This Reference Manual output has not been verified,\nand may contain omissions or errors.\nReport any problems on the ",(0,s.jsx)(r.a,{href:"https://github.com/ada-lang-io/ada-lang-io/issues/20",children:"tracking issue"})]})}),"\n","\n",(0,s.jsx)(d.A,{children:"1"}),"\n",(0,s.jsxs)("p",{children:["[A ",(0,s.jsx)("code",{children:(0,s.jsx)("a",{href:"/docs/arm/AA-2/AA-2.5#S0015",children:"character_literal"})})," is formed by enclosing a graphic character between two apostrophe characters.] ",(0,s.jsx)("br",{})]}),"\n",(0,s.jsx)(r.h4,{id:"syntax",children:"Syntax"}),"\n",(0,s.jsx)(d.A,{children:"2"}),"\n",(0,s.jsx)(l.A,{children:(0,s.jsxs)(r.p,{children:[(0,s.jsxs)("code",{children:["character","_","literal"]}),(0,s.jsx)("a",{id:"S0015"}),(0,s.jsx)("code",{children:" ::= "}),"'",(0,s.jsxs)("code",{children:["graphic","_","character"]}),"'",(0,s.jsx)("br",{})]})}),"\n",(0,s.jsxs)(c.A,{children:[(0,s.jsx)(d.A,{children:"3"}),(0,s.jsx)(t.A,{type:"aarm",aarm:"note",children:(0,s.jsxs)(r.p,{children:["NOTE   A ",(0,s.jsx)("code",{children:(0,s.jsx)("a",{href:"/docs/arm/AA-2/AA-2.5#S0015",children:"character_literal"})})," is an enumeration literal of a character type. See ",(0,s.jsx)("a",{href:"/docs/arm/AA-3/AA-3.5#Subclause_3.5.2",children:"3.5.2"}),". ",(0,s.jsx)("br",{})]})})]}),"\n",(0,s.jsx)(r.h4,{id:"examples",children:"Examples"}),"\n",(0,s.jsx)(d.A,{children:"4"}),"\n",(0,s.jsxs)("p",{children:[(0,s.jsx)("em",{children:"Examples of character literals:"})," ",(0,s.jsx)("br",{})]}),"\n",(0,s.jsx)(d.A,{children:"5/2"}),"\n",(0,s.jsx)(h.A,{items:["AI95-00433-01"]}),"\n",(0,s.jsx)(l.A,{language:"ada",children:(0,s.jsxs)(r.p,{children:["'A'     '","*","'     '''     ' '","\n","'L'     '\u041b'     '\u039b'    -- Various els.","\n","'\u221e'     '\u05d0'            -- Big numbers - infinity and aleph.","\n"]})}),"\n",(0,s.jsx)(c.A,{children:(0,s.jsx)(r.h4,{id:"wording-changes-from-ada-83",children:"Wording Changes from Ada 83"})}),"\n",(0,s.jsxs)(c.A,{children:[(0,s.jsx)(d.A,{children:"5.a/3"}),(0,s.jsx)(h.A,{items:["AI05-0299-1"]}),(0,s.jsx)(t.A,{type:"aarm",aarm:"note",children:(0,s.jsxs)(r.p,{children:["The definitions of the values of literals are in Clauses 3 and 4, rather than here, since it requires knowledge of types. ",(0,s.jsx)("br",{})]})})]})]})}function p(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(m,{...e})}):m(e)}}}]);