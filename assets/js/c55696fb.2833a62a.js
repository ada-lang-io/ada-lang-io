"use strict";(self.webpackChunkada_lang_io=self.webpackChunkada_lang_io||[]).push([[6147],{5329:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>x,contentTitle:()=>A,default:()=>f,frontMatter:()=>h,metadata:()=>r,toc:()=>j});const r=JSON.parse('{"id":"arm/AA-5/AA-5.6","title":"5.6 Block Statements","description":"This Reference Manual output has not been verified,","source":"@site/docs/arm/AA-5/AA-5.6.mdx","sourceDirName":"arm/AA-5","slug":"/arm/AA-5/AA-5.6","permalink":"/docs/arm/AA-5/AA-5.6","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":47,"frontMatter":{"sidebar_position":47},"sidebar":"referenceManualSidebar","previous":{"title":"5.5 Loop Statements","permalink":"/docs/arm/AA-5/AA-5.5"},"next":{"title":"5.7 Exit Statements","permalink":"/docs/arm/AA-5/AA-5.7"}}');var a=s(4848),c=s(8453),i=s(3204),d=s(4220),t=s(8069),l=s(8011),o=s(6465);const h={sidebar_position:47},A="5.6 Block Statements",x={},j=[{value:"Syntax",id:"syntax",level:4},{value:"Static Semantics",id:"static-semantics",level:4},{value:"Dynamic Semantics",id:"dynamic-semantics",level:4},{value:"Examples",id:"examples",level:4},{value:"Wording Changes from Ada 83",id:"wording-changes-from-ada-83",level:4},{value:"5.6.1  Parallel Block Statements",id:"561--parallel-block-statements",level:2},{value:"Syntax",id:"syntax-1",level:4},{value:"Dynamic Semantics",id:"dynamic-semantics-1",level:4},{value:"Examples",id:"examples-1",level:4},{value:"Extensions to Ada 2012",id:"extensions-to-ada-2012",level:4}];function m(e){const n={a:"a",admonition:"admonition",h1:"h1",h2:"h2",h4:"h4",header:"header",p:"p",...(0,c.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"56-block-statements",children:"5.6 Block Statements"})}),"\n",(0,a.jsx)(n.admonition,{type:"danger",children:(0,a.jsxs)(n.p,{children:["This Reference Manual output has not been verified,\nand may contain omissions or errors.\nReport any problems on the ",(0,a.jsx)(n.a,{href:"https://github.com/ada-lang-io/ada-lang-io/issues/20",children:"tracking issue"})]})}),"\n","\n",(0,a.jsx)(l.A,{children:"1"}),"\n",(0,a.jsxs)("p",{children:["[A ",(0,a.jsx)("code",{children:(0,a.jsx)("a",{href:"/docs/arm/AA-5/AA-5.6#S0191",children:"block_statement"})})," encloses a ",(0,a.jsx)("code",{children:(0,a.jsx)("a",{href:"/docs/arm/AA-11/AA-11.2#S0304",children:"handled_sequence_of_statements"})})," optionally preceded by a ",(0,a.jsx)("code",{children:(0,a.jsx)("a",{href:"/docs/arm/AA-3/AA-3.11#S0086",children:"declarative_part"})}),".] ",(0,a.jsx)("br",{})]}),"\n",(0,a.jsx)(n.h4,{id:"syntax",children:"Syntax"}),"\n",(0,a.jsx)(l.A,{children:"2"}),"\n",(0,a.jsx)(t.A,{children:(0,a.jsxs)(n.p,{children:[(0,a.jsxs)("code",{children:["block","_","statement"]}),(0,a.jsx)("a",{id:"S0191"}),(0,a.jsx)("code",{children:" ::= "}),(0,a.jsx)("br",{}),"   [",(0,a.jsxs)("em",{children:["block","_"]}),(0,a.jsx)("code",{children:(0,a.jsx)("a",{href:"/docs/arm/AA-5/AA-5.1#S0172",children:"statement_identifier"})}),":]",(0,a.jsx)("br",{}),"       [",(0,a.jsx)("strong",{children:"declare"}),(0,a.jsx)("br",{}),"            ",(0,a.jsx)("code",{children:(0,a.jsx)("a",{href:"/docs/arm/AA-3/AA-3.11#S0086",children:"declarative_part"})}),"]",(0,a.jsx)("br",{}),"        ",(0,a.jsx)("strong",{children:"begin"}),(0,a.jsx)("br",{}),"            ",(0,a.jsx)("code",{children:(0,a.jsx)("a",{href:"/docs/arm/AA-11/AA-11.2#S0304",children:"handled_sequence_of_statements"})}),(0,a.jsx)("br",{}),"        ",(0,a.jsx)("strong",{children:"end"})," [",(0,a.jsxs)("em",{children:["block","_"]}),(0,a.jsx)("code",{children:(0,a.jsx)("a",{href:"/docs/arm/AA-2/AA-2.3#S0002",children:"identifier"})}),"];",(0,a.jsx)("br",{})]})}),"\n",(0,a.jsx)(l.A,{children:"3"}),"\n",(0,a.jsxs)("p",{class:"Indented2",children:["If a ",(0,a.jsx)("code",{children:(0,a.jsx)("a",{href:"/docs/arm/AA-5/AA-5.6#S0191",children:"block_statement"})})," has a ",(0,a.jsxs)("em",{children:["block","_"]}),(0,a.jsx)("code",{children:(0,a.jsx)("a",{href:"/docs/arm/AA-5/AA-5.1#S0172",children:"statement_identifier"})}),", then the ",(0,a.jsx)("code",{children:(0,a.jsx)("a",{href:"/docs/arm/AA-2/AA-2.3#S0002",children:"identifier"})})," shall be repeated after the ",(0,a.jsx)("strong",{children:"end"}),"; otherwise, there shall not be an ",(0,a.jsx)("code",{children:(0,a.jsx)("a",{href:"/docs/arm/AA-2/AA-2.3#S0002",children:"identifier"})})," after the ",(0,a.jsx)("strong",{children:"end"}),". ",(0,a.jsx)("br",{})]}),"\n",(0,a.jsx)(n.h4,{id:"static-semantics",children:"Static Semantics"}),"\n",(0,a.jsx)(l.A,{children:"4"}),"\n",(0,a.jsxs)("p",{children:["A ",(0,a.jsx)("code",{children:(0,a.jsx)("a",{href:"/docs/arm/AA-5/AA-5.6#S0191",children:"block_statement"})})," that has no explicit ",(0,a.jsx)("code",{children:(0,a.jsx)("a",{href:"/docs/arm/AA-3/AA-3.11#S0086",children:"declarative_part"})})," has an implicit empty ",(0,a.jsx)("code",{children:(0,a.jsx)("a",{href:"/docs/arm/AA-3/AA-3.11#S0086",children:"declarative_part"})}),". ",(0,a.jsx)("br",{})]}),"\n",(0,a.jsxs)(d.A,{children:[(0,a.jsx)(l.A,{children:"4.a"}),(0,a.jsx)(i.A,{type:"aarm",aarm:"ramification",children:(0,a.jsxs)(n.p,{children:[(0,a.jsx)("strong",{}),"Thus, other rules can always refer to the ",(0,a.jsx)("code",{children:(0,a.jsx)("a",{href:"/docs/arm/AA-3/AA-3.11#S0086",children:"declarative_part"})})," of a ",(0,a.jsx)("code",{children:(0,a.jsx)("a",{href:"/docs/arm/AA-5/AA-5.6#S0191",children:"block_statement"})}),". ",(0,a.jsx)("br",{})]})})]}),"\n",(0,a.jsx)(n.h4,{id:"dynamic-semantics",children:"Dynamic Semantics"}),"\n",(0,a.jsx)(l.A,{children:"5"}),"\n",(0,a.jsxs)("p",{children:["The execution of a ",(0,a.jsx)("code",{children:(0,a.jsx)("a",{href:"/docs/arm/AA-5/AA-5.6#S0191",children:"block_statement"})})," consists of the elaboration of its ",(0,a.jsx)("code",{children:(0,a.jsx)("a",{href:"/docs/arm/AA-3/AA-3.11#S0086",children:"declarative_part"})})," followed by the execution of its ",(0,a.jsx)("code",{children:(0,a.jsx)("a",{href:"/docs/arm/AA-11/AA-11.2#S0304",children:"handled_sequence_of_statements"})}),". ",(0,a.jsx)("br",{})]}),"\n",(0,a.jsx)(n.h4,{id:"examples",children:"Examples"}),"\n",(0,a.jsx)(l.A,{children:"6"}),"\n",(0,a.jsxs)("p",{children:[(0,a.jsx)("em",{children:"Example of a block statement with a local variable:"})," ",(0,a.jsx)("br",{})]}),"\n",(0,a.jsx)(l.A,{children:"7"}),"\n",(0,a.jsx)(t.A,{language:"ada",children:(0,a.jsxs)(n.p,{children:["Swap:","\n","   declare","\n","      Temp : Integer;","\n","   begin","\n","      Temp := V; V := U; U := Temp;","\n","   end Swap;","\n"]})}),"\n",(0,a.jsxs)(d.A,{children:[(0,a.jsx)(l.A,{children:"7.a"}),(0,a.jsx)(i.A,{type:"aarm",aarm:"ramification",children:(0,a.jsxs)(n.p,{children:[(0,a.jsx)("strong",{}),"If task objects are declared within a ",(0,a.jsx)("code",{children:(0,a.jsx)("a",{href:"/docs/arm/AA-5/AA-5.6#S0191",children:"block_statement"})})," whose execution is completed, the ",(0,a.jsx)("code",{children:(0,a.jsx)("a",{href:"/docs/arm/AA-5/AA-5.6#S0191",children:"block_statement"})})," is not left until all its dependent tasks are terminated (see ",(0,a.jsx)("a",{href:"/docs/arm/AA-7/AA-7.6",children:"7.6"}),"). This rule applies to completion caused by a transfer of control.",(0,a.jsx)("br",{})]})})]}),"\n",(0,a.jsxs)(d.A,{children:[(0,a.jsx)(l.A,{children:"7.b"}),(0,a.jsx)(i.A,{type:"aarm",aarm:"note",children:(0,a.jsxs)(n.p,{children:["Within a ",(0,a.jsx)("code",{children:(0,a.jsx)("a",{href:"/docs/arm/AA-5/AA-5.6#S0191",children:"block_statement"})}),", the block name can be used in expanded names denoting local entities such as Swap.Temp in the above example (see ",(0,a.jsx)("a",{href:"/docs/arm/AA-4/AA-4.1#Subclause_4.1.3",children:"4.1.3"}),"). ",(0,a.jsx)("br",{})]})})]}),"\n",(0,a.jsx)(d.A,{children:(0,a.jsx)(n.h4,{id:"wording-changes-from-ada-83",children:"Wording Changes from Ada 83"})}),"\n",(0,a.jsxs)(d.A,{children:[(0,a.jsx)(l.A,{children:"7.c"}),(0,a.jsx)(i.A,{type:"aarm",aarm:"note",children:(0,a.jsxs)(n.p,{children:["The syntax rule for ",(0,a.jsx)("code",{children:(0,a.jsx)("a",{href:"/docs/arm/AA-5/AA-5.6#S0191",children:"block_statement"})})," now uses the syntactic category ",(0,a.jsx)("code",{children:(0,a.jsx)("a",{href:"/docs/arm/AA-11/AA-11.2#S0304",children:"handled_sequence_of_statements"})}),". ",(0,a.jsx)("br",{})]})})]}),"\n",(0,a.jsx)("a",{id:"Subclause_5.6.1"}),"\n",(0,a.jsx)(n.h2,{id:"561--parallel-block-statements",children:"5.6.1  Parallel Block Statements"}),"\n",(0,a.jsx)(l.A,{children:"1/5_5.6.1"}),"\n",(0,a.jsx)(o.A,{items:["AI12-0119-1","AI12-0436-1"]}),"\n",(0,a.jsxs)("p",{children:["[A ",(0,a.jsx)("code",{children:(0,a.jsx)("a",{href:"/docs/arm/AA-5/AA-5.6#S0192",children:"parallel_block_statement"})})," comprises two or more ",(0,a.jsx)("code",{children:(0,a.jsx)("a",{href:"/docs/arm/AA-5/AA-5.1#S0166",children:"sequence_of_statements"})})," separated by ",(0,a.jsx)("strong",{children:"and"})," where each represents an independent activity that is intended to proceed concurrently with the others.]",(0,a.jsx)("br",{})]}),"\n",(0,a.jsx)(n.h4,{id:"syntax-1",children:"Syntax"}),"\n",(0,a.jsx)(l.A,{children:"2/5_5.6.1"}),"\n",(0,a.jsx)(o.A,{items:["AI12-0119-1","AI12-0427-1","AI12-0436-1"]}),"\n",(0,a.jsx)(t.A,{children:(0,a.jsxs)(n.p,{children:[(0,a.jsxs)("code",{children:["parallel","_","block","_","statement"]}),(0,a.jsx)("a",{id:"S0192"}),(0,a.jsx)("code",{children:" ::= "}),(0,a.jsx)("br",{}),"    ",(0,a.jsx)("strong",{children:"parallel"})," [(",(0,a.jsx)("code",{children:(0,a.jsx)("a",{href:"/docs/arm/AA-5/AA-5.5#S0180",children:"chunk_specification"})}),")] [",(0,a.jsx)("code",{children:(0,a.jsx)("a",{href:"/docs/arm/AA-13/AA-13.1#S0346",children:"aspect_specification"})}),"] ",(0,a.jsx)("strong",{children:"do"}),(0,a.jsx)("br",{}),"       ",(0,a.jsx)("code",{children:(0,a.jsx)("a",{href:"/docs/arm/AA-5/AA-5.1#S0166",children:"sequence_of_statements"})}),(0,a.jsx)("br",{}),"    ",(0,a.jsx)("strong",{children:"and"}),(0,a.jsx)("br",{}),"       ",(0,a.jsx)("code",{children:(0,a.jsx)("a",{href:"/docs/arm/AA-5/AA-5.1#S0166",children:"sequence_of_statements"})}),(0,a.jsx)("br",{}),"   ","{",(0,a.jsx)("strong",{children:"and"}),(0,a.jsx)("br",{}),"       ",(0,a.jsx)("code",{children:(0,a.jsx)("a",{href:"/docs/arm/AA-5/AA-5.1#S0166",children:"sequence_of_statements"})}),"}",(0,a.jsx)("br",{}),"    ",(0,a.jsx)("strong",{children:"end do"}),";",(0,a.jsx)("br",{})]})}),"\n",(0,a.jsx)(l.A,{children:"3/5_5.6.1"}),"\n",(0,a.jsx)(o.A,{items:["AI12-0427-1"]}),"\n",(0,a.jsxs)("p",{class:"Indented2",children:["The ",(0,a.jsx)("code",{children:(0,a.jsx)("a",{href:"/docs/arm/AA-5/AA-5.5#S0180",children:"chunk_specification"})}),", if any, of a ",(0,a.jsx)("code",{children:(0,a.jsx)("a",{href:"/docs/arm/AA-5/AA-5.6#S0192",children:"parallel_block_statement"})})," shall be an ",(0,a.jsxs)("em",{children:["integer","_"]}),(0,a.jsx)("code",{children:(0,a.jsx)("a",{href:"/docs/arm/AA-4/AA-4.4#S0138",children:"simple_expression"})}),". ",(0,a.jsx)("br",{})]}),"\n",(0,a.jsx)(n.h4,{id:"dynamic-semantics-1",children:"Dynamic Semantics"}),"\n",(0,a.jsx)(l.A,{children:"4/5_5.6.1"}),"\n",(0,a.jsx)(o.A,{items:["AI12-0119-1","AI12-0427-1"]}),"\n",(0,a.jsxs)("p",{children:["For the execution of a ",(0,a.jsx)("code",{children:(0,a.jsx)("a",{href:"/docs/arm/AA-5/AA-5.6#S0192",children:"parallel_block_statement"})}),", the ",(0,a.jsx)("code",{children:(0,a.jsx)("a",{href:"/docs/arm/AA-5/AA-5.5#S0180",children:"chunk_specification"})})," and the ",(0,a.jsx)("code",{children:(0,a.jsx)("a",{href:"/docs/arm/AA-13/AA-13.1#S0346",children:"aspect_specification"})}),", if any, are elaborated in an arbitrary order. After elaborating the ",(0,a.jsx)("code",{children:(0,a.jsx)("a",{href:"/docs/arm/AA-5/AA-5.5#S0180",children:"chunk_specification"})}),", if any, a check is made that the determined maximum number of chunks is greater than zero. If this check fails, Program","_","Error is raised. ",(0,a.jsx)("br",{})]}),"\n",(0,a.jsx)(l.A,{children:"5/5_5.6.1"}),"\n",(0,a.jsx)(o.A,{items:["AI12-0119-1","AI12-0427-1","AI12-0436-1","AI12-0449-1"]}),"\n",(0,a.jsxs)("p",{children:["Then, the various ",(0,a.jsx)("code",{children:(0,a.jsx)("a",{href:"/docs/arm/AA-5/AA-5.1#S0166",children:"sequence_of_statements"})})," are grouped into one or more ",(0,a.jsx)("em",{children:"chunks"}),", each with its own logical thread of control (see Clause ",(0,a.jsx)("a",{href:"/docs/arm/AA-9/",children:"9"}),"), up to the maximum number of chunks specified by the ",(0,a.jsx)("code",{children:(0,a.jsx)("a",{href:"/docs/arm/AA-5/AA-5.5#S0180",children:"chunk_specification"})}),", if any. Within each chunk every ",(0,a.jsx)("code",{children:(0,a.jsx)("a",{href:"/docs/arm/AA-5/AA-5.1#S0166",children:"sequence_of_statements"})})," of the chunk is executed in turn, in an arbitrary order. The ",(0,a.jsx)("code",{children:(0,a.jsx)("a",{href:"/docs/arm/AA-5/AA-5.6#S0192",children:"parallel_block_statement"})})," is complete once every one of the ",(0,a.jsx)("code",{children:(0,a.jsx)("a",{href:"/docs/arm/AA-5/AA-5.1#S0166",children:"sequence_of_statements"})})," has completed, either by reaching the end of its execution, or due to a transfer of control out of the construct by one of the ",(0,a.jsx)("code",{children:(0,a.jsx)("a",{href:"/docs/arm/AA-5/AA-5.1#S0166",children:"sequence_of_statements"})})," (see ",(0,a.jsx)("a",{href:"/docs/arm/AA-5/AA-5.1",children:"5.1"}),").",(0,a.jsx)("br",{})]}),"\n",(0,a.jsxs)(d.A,{children:[(0,a.jsx)(l.A,{children:"5.a/5_5.6.1"}),(0,a.jsx)(o.A,{items:["AI12-0119-1","AI12-0436-1"]}),(0,a.jsx)(i.A,{type:"aarm",aarm:"implementation-note",children:(0,a.jsxs)(n.p,{children:[(0,a.jsx)("strong",{}),"Although each ",(0,a.jsx)("code",{children:(0,a.jsx)("a",{href:"/docs/arm/AA-5/AA-5.1#S0166",children:"sequence_of_statements"})})," of a parallel block represents a separate logical thread of control, the implementation may choose to combine two or more such logical threads of control into a single physical thread of control to reduce the cost of creating numerous physical threads of control. ",(0,a.jsx)("br",{})]})})]}),"\n",(0,a.jsx)(n.h4,{id:"examples-1",children:"Examples"}),"\n",(0,a.jsx)(l.A,{children:"6/5_5.6.1"}),"\n",(0,a.jsx)(o.A,{items:["AI12-0429-1"]}),"\n",(0,a.jsxs)("p",{children:[(0,a.jsx)("em",{children:"Example of a parallel block used to walk a binary tree in parallel:"}),(0,a.jsx)("br",{})]}),"\n",(0,a.jsx)(l.A,{children:"7/5_5.6.1"}),"\n",(0,a.jsx)(o.A,{items:["AI12-0119-1","AI12-0404-1"]}),"\n",(0,a.jsx)(t.A,{language:"ada",children:(0,a.jsxs)(n.p,{children:["procedure Traverse (T : Expr","_","Ptr) is -- see ",(0,a.jsx)("a",{href:"/docs/arm/AA-3/AA-3.9#Subclause_3.9.1",children:"3.9.1"}),"\n","begin","\n","   if T /= null and then","\n","      T.all in Binary","_","Operation'Class -- see ",(0,a.jsx)("a",{href:"/docs/arm/AA-3/AA-3.9#Subclause_3.9.1",children:"3.9.1"}),"\n","   then -- recurse down the binary tree","\n","      parallel do","\n","         Traverse (T.Left);","\n","      and","\n","         Traverse (T.Right);","\n","      and","\n","         Ada.Text","_","IO.Put","_","Line","\n",'            ("Processing " & Ada.Tags.Expanded',"_","Name (T'Tag));","\n","      end do;","\n","   end if;","\n","end Traverse;","\n"]})}),"\n",(0,a.jsx)(l.A,{children:"8/5_5.6.1"}),"\n",(0,a.jsx)(o.A,{items:["AI12-0429-1"]}),"\n",(0,a.jsxs)("p",{children:[(0,a.jsx)("em",{children:"Example of a parallel block used to search two halves of a string in parallel:"}),(0,a.jsx)("br",{})]}),"\n",(0,a.jsx)(l.A,{children:"9/5_5.6.1"}),"\n",(0,a.jsx)(o.A,{items:["AI12-0119-1"]}),"\n",(0,a.jsx)(t.A,{language:"ada",children:(0,a.jsxs)(n.p,{children:["function Search (S : String; Char : Character) return Boolean is","\n","begin","\n","   if S'Length ","<","= 1000 then","\n","       -- Sequential scan","\n","       return (for some C of S =",">"," C = Char);","\n","   else","\n","       -- Parallel divide and conquer","\n","       declare","\n","          Mid : constant Positive := S'First + S'Length/2 - 1;","\n","       begin","\n","          parallel do","\n","             for C of S(S'First .. Mid) loop","\n","                if C = Char then","\n","                   return True;  -- Terminates enclosing do","\n","                end if;","\n","             end loop;","\n","          and","\n","             for C of S(Mid + 1 .. S'Last) loop","\n","                if C = Char then","\n","                   return True;  -- Terminates enclosing do","\n","                end if;","\n","             end loop;","\n","          end do;","\n","          -- Not found","\n","          return False;","\n","       end;","\n","   end if;","\n","end Search;","\n"]})}),"\n",(0,a.jsx)(d.A,{children:(0,a.jsx)(n.h4,{id:"extensions-to-ada-2012",children:"Extensions to Ada 2012"})}),"\n",(0,a.jsxs)(d.A,{children:[(0,a.jsx)(l.A,{children:"9.a/5_5.6.1"}),(0,a.jsx)(o.A,{items:["AI12-0119-1","AI12-0427-1","AI12-0436-1"]}),(0,a.jsx)(i.A,{type:"aarm",aarm:"note",children:(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)("code",{children:(0,a.jsx)("a",{href:"/docs/arm/AA-5/AA-5.6#S0192",children:"parallel_block_statement"})})," is new. ",(0,a.jsx)("br",{})]})})]})]})}function f(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(m,{...e})}):m(e)}}}]);