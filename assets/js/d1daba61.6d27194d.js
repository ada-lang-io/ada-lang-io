"use strict";(self.webpackChunkada_lang_io=self.webpackChunkada_lang_io||[]).push([[487],{1884:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>u,contentTitle:()=>j,default:()=>m,frontMatter:()=>h,metadata:()=>i,toc:()=>x});const i=JSON.parse('{"id":"arm/AA-D/AA-D.10","title":"D.10. Synchronous Task Control","description":"This Reference Manual output has not been verified,","source":"@site/docs/arm/AA-D/AA-D.10.mdx","sourceDirName":"arm/AA-D","slug":"/arm/AA-D/AA-D.10","permalink":"/docs/arm/AA-D/AA-D.10","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":164,"frontMatter":{"sidebar_position":164},"sidebar":"referenceManualSidebar","previous":{"title":"D.9. Delay Accuracy","permalink":"/docs/arm/AA-D/AA-D.9"},"next":{"title":"D.11. Asynchronous Task Control","permalink":"/docs/arm/AA-D/AA-D.11"}}');var r=s(4848),a=s(8453),t=s(3204),o=s(4220),l=s(8069),d=s(8011),c=s(6465);const h={sidebar_position:164},j="D.10. Synchronous Task Control",u={},x=[{value:"Static Semantics",id:"static-semantics",level:4},{value:"Dynamic Semantics",id:"dynamic-semantics",level:4},{value:"Bounded (Run-Time) Errors",id:"bounded-run-time-errors",level:4},{value:"Implementation Requirements",id:"implementation-requirements",level:4},{value:"Extensions to Ada 95",id:"extensions-to-ada-95",level:4},{value:"Extensions to Ada 2005",id:"extensions-to-ada-2005",level:4},{value:"Wording Changes from Ada 2012",id:"wording-changes-from-ada-2012",level:4},{value:"D.10.1  Synchronous Barriers",id:"d101--synchronous-barriers",level:2},{value:"Static Semantics",id:"static-semantics-1",level:4},{value:"Dynamic Semantics",id:"dynamic-semantics-1",level:4},{value:"Bounded (Run-Time) Errors",id:"bounded-run-time-errors-1",level:4},{value:"Extensions to Ada 2005",id:"extensions-to-ada-2005-1",level:4}];function A(e){const n={a:"a",admonition:"admonition",h1:"h1",h2:"h2",h4:"h4",header:"header",p:"p",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"d10-synchronous-task-control",children:"D.10. Synchronous Task Control"})}),"\n",(0,r.jsx)(n.admonition,{type:"danger",children:(0,r.jsxs)(n.p,{children:["This Reference Manual output has not been verified,\nand may contain omissions or errors.\nReport any problems on the ",(0,r.jsx)(n.a,{href:"https://github.com/ada-lang-io/ada-lang-io/issues/20",children:"tracking issue"})]})}),"\n","\n",(0,r.jsx)(d.A,{children:"1/3"}),"\n",(0,r.jsx)(c.A,{items:["AI05-0299-1"]}),"\n",(0,r.jsxs)("p",{children:["[This subclause describes a language-defined private semaphore (suspension object), which can be used for ",(0,r.jsx)("i",{children:"two-stage suspend"})," operations and as a simple building block for implementing higher-level queues.] ",(0,r.jsx)("br",{})]}),"\n",(0,r.jsx)(n.h4,{id:"static-semantics",children:"Static Semantics"}),"\n",(0,r.jsx)(d.A,{children:"2"}),"\n",(0,r.jsxs)("p",{children:["The following language-defined package exists: ",(0,r.jsx)("br",{})]}),"\n",(0,r.jsx)(d.A,{children:"3/5"}),"\n",(0,r.jsx)(c.A,{items:["AI95-00362-01","AI12-0241-1","AI12-0302-1"]}),"\n",(0,r.jsxs)(l.A,{language:"ada",children:[(0,r.jsxs)(n.p,{children:["package Ada.Synchronous","_","Task","_","Control","\n","  with Preelaborate, Nonblocking, Global =",">"," in out synchronized is","\n","\n",(0,r.jsx)(d.A,{children:"4/5"})]}),(0,r.jsx)(c.A,{items:["AI12-0241-1"]}),(0,r.jsxs)(n.p,{children:["type Suspension","_","Object is limited private;","\n","  procedure Set","_","True(S : in out Suspension","_","Object);","\n","  procedure Set","_","False(S : in out Suspension","_","Object);","\n","  function Current","_","State(S : Suspension","_","Object) return Boolean;","\n","  procedure Suspend","_","Until","_","True(S : in out Suspension","_","Object)","\n","     with Nonblocking =",">"," False;","\n","private","\n","     ... -- not specified by the language","\n","end Ada.Synchronous","_","Task","_","Control;","\n"]})]}),"\n",(0,r.jsx)(d.A,{children:"5"}),"\n",(0,r.jsxs)("p",{children:["The type Suspension","_","Object is a by-reference type.",(0,r.jsx)("br",{})]}),"\n",(0,r.jsxs)(o.A,{children:[(0,r.jsx)(d.A,{children:"5.a/2"}),(0,r.jsx)(c.A,{items:["AI95-00318-02"]}),(0,r.jsx)(t.A,{type:"aarm",aarm:"implementation-note",children:(0,r.jsxs)(n.p,{children:[(0,r.jsx)("b",{}),"The implementation can ensure this by, for example, making the full view an explicitly limited record type.",(0,r.jsx)("br",{})]})})]}),"\n",(0,r.jsx)(d.A,{children:"5.1/3"}),"\n",(0,r.jsx)(c.A,{items:["AI05-0168-1"]}),"\n",(0,r.jsxs)("p",{children:["The following language-defined package exists: ",(0,r.jsx)("br",{})]}),"\n",(0,r.jsx)(d.A,{children:"5.2/5"}),"\n",(0,r.jsx)(c.A,{items:["AI05-0168-1","AI12-0241-1","AI12-0302-1"]}),"\n",(0,r.jsx)(l.A,{language:"ada",children:(0,r.jsxs)(n.p,{children:["with Ada.Real","_","Time;","\n","package Ada.Synchronous","_","Task","_","Control.EDF","\n","   with Nonblocking, Global =",">"," in out synchronized is","\n","   procedure Suspend","_","Until","_","True","_","And","_","Set","_","Deadline","\n","      (S  : in out Suspension","_","Object;","\n","       TS : in     Ada.Real","_","Time.Time","_","Span)","\n","      with Nonblocking =",">"," False;","\n","end Ada.Synchronous","_","Task","_","Control.EDF;","\n"]})}),"\n",(0,r.jsx)(n.h4,{id:"dynamic-semantics",children:"Dynamic Semantics"}),"\n",(0,r.jsx)(d.A,{children:"6/2"}),"\n",(0,r.jsx)(c.A,{items:["AI95-00114-01"]}),"\n",(0,r.jsxs)("p",{children:["An object of the type Suspension","_","Object has two visible states: True and False. Upon initialization, its value is set to False. ",(0,r.jsx)("br",{})]}),"\n",(0,r.jsxs)(o.A,{children:[(0,r.jsx)(d.A,{children:"6.a"}),(0,r.jsx)(t.A,{type:"aarm",aarm:"discussion",children:(0,r.jsxs)(n.p,{children:[(0,r.jsx)("b",{}),"This object is assumed to be private to the declaring task, i.e. only that task will call Suspend","_","Until","_","True on this object, and the count of callers is at most one. Other tasks can, of course, change and query the state of this object. ",(0,r.jsx)("br",{})]})})]}),"\n",(0,r.jsx)(d.A,{children:"7/2"}),"\n",(0,r.jsx)(c.A,{items:["AI95-00114-01"]}),"\n",(0,r.jsxs)("p",{children:["The operations Set","_","True and Set","_","False are atomic with respect to each other and with respect to Suspend","_","Until","_","True; they set the state to True and False respectively.",(0,r.jsx)("br",{})]}),"\n",(0,r.jsx)(d.A,{children:"8"}),"\n",(0,r.jsxs)("p",{children:["Current","_","State returns the current state of the object. ",(0,r.jsx)("br",{})]}),"\n",(0,r.jsxs)(o.A,{children:[(0,r.jsx)(d.A,{children:"8.a"}),(0,r.jsx)(t.A,{type:"aarm",aarm:"discussion",children:(0,r.jsxs)(n.p,{children:[(0,r.jsx)("b",{}),"This state can change immediately after the operation returns. ",(0,r.jsx)("br",{})]})})]}),"\n",(0,r.jsx)(d.A,{children:"9/2"}),"\n",(0,r.jsx)(c.A,{items:["AI95-00114-01"]}),"\n",(0,r.jsxs)("p",{children:["The procedure Suspend","_","Until","_","True blocks the calling task until the state of the object S is True; at that point the task becomes ready and the state of the object becomes False.",(0,r.jsx)("br",{})]}),"\n",(0,r.jsx)(d.A,{children:"10/5"}),"\n",(0,r.jsx)(c.A,{items:["AI12-0241-1"]}),"\n",(0,r.jsxs)("p",{children:["Program","_","Error is raised upon calling Suspend","_","Until","_","True if another task is already waiting on that suspension object.",(0,r.jsx)("br",{})]}),"\n",(0,r.jsx)(d.A,{children:"10.1/5"}),"\n",(0,r.jsx)(c.A,{items:["AI05-0168-1","AI05-0269-1","AI12-0241-1"]}),"\n",(0,r.jsxs)("p",{children:["The procedure Suspend","_","Until","_","True","_","And","_","Set","_","Deadline blocks the calling task until the state of the object S is True; at that point the task becomes ready with a deadline of Ada.Real","_","Time.Clock + TS, and the state of the object becomes False. Program","_","Error is raised upon calling Suspend","_","Until","_","True","_","And","_","Set","_","Deadline if another task is already waiting on that suspension object. ",(0,r.jsx)("br",{})]}),"\n",(0,r.jsx)(n.h4,{id:"bounded-run-time-errors",children:"Bounded (Run-Time) Errors"}),"\n",(0,r.jsx)(d.A,{children:"10.2/5"}),"\n",(0,r.jsx)(c.A,{items:["AI12-0171-1","AI12-0439-1"]}),"\n",(0,r.jsxs)("p",{children:["It is a bounded error for two or more tasks to call Suspend","_","Until","_","True on the same Suspension","_","Object concurrently. For each task, Program","_","Error can be raised, the task can proceed without suspending, or the task can suspend, potentially indefinitely. The state of the suspension object can end up either True or False. ",(0,r.jsx)("br",{})]}),"\n",(0,r.jsx)(n.h4,{id:"implementation-requirements",children:"Implementation Requirements"}),"\n",(0,r.jsx)(d.A,{children:"11"}),"\n",(0,r.jsxs)("p",{children:["The implementation is required to allow the calling of Set","_","False and Set","_","True during any protected action, even one that has its ceiling priority in the Interrupt","_","Priority range.",(0,r.jsx)("br",{})]}),"\n",(0,r.jsxs)(o.A,{children:[(0,r.jsx)(d.A,{children:"12/3"}),(0,r.jsx)(c.A,{items:["AI05-0168-1"]}),(0,r.jsx)(t.A,{type:"aarm",aarm:"note",children:(0,r.jsxs)(n.p,{children:["NOTE   More complex schemes, such as setting the deadline relative to when Set","_","True is called, can be programmed using a protected object. ",(0,r.jsx)("br",{})]})})]}),"\n",(0,r.jsx)(o.A,{children:(0,r.jsx)(n.h4,{id:"extensions-to-ada-95",children:"Extensions to Ada 95"})}),"\n",(0,r.jsxs)(o.A,{children:[(0,r.jsx)(d.A,{children:"12.a/2"}),(0,r.jsx)(c.A,{items:["AI95-00362-01"]}),(0,r.jsx)(t.A,{type:"aarm",aarm:"note",children:(0,r.jsxs)(n.p,{children:["Synchronous","_","Task","_","Control is now Preelaborated, so it can be used in preelaborated units. ",(0,r.jsx)("br",{})]})})]}),"\n",(0,r.jsx)(o.A,{children:(0,r.jsx)(n.h4,{id:"extensions-to-ada-2005",children:"Extensions to Ada 2005"})}),"\n",(0,r.jsxs)(o.A,{children:[(0,r.jsx)(d.A,{children:"12.b/3"}),(0,r.jsx)(c.A,{items:["AI05-0168-1"]}),(0,r.jsx)(t.A,{type:"aarm",aarm:"note",children:(0,r.jsxs)(n.p,{children:["Child package Ada.Synchronous","_","Task","_","Control.EDF is new. ",(0,r.jsx)("br",{})]})})]}),"\n",(0,r.jsx)(o.A,{children:(0,r.jsx)(n.h4,{id:"wording-changes-from-ada-2012",children:"Wording Changes from Ada 2012"})}),"\n",(0,r.jsxs)(o.A,{children:[(0,r.jsx)(d.A,{children:"12.c/5"}),(0,r.jsx)(c.A,{items:["AI12-0171-1"]}),(0,r.jsx)(t.A,{type:"aarm",aarm:"correction",children:(0,r.jsxs)(n.p,{children:[(0,r.jsx)("b",{})," Clarified that Suspend","_","Until","_","True should only be called from a single task, and what happens if that is violated. ",(0,r.jsx)("br",{})]})})]}),"\n",(0,r.jsx)("a",{id:"Subclause_D.10.1"}),"\n",(0,r.jsx)(n.h2,{id:"d101--synchronous-barriers",children:"D.10.1  Synchronous Barriers"}),"\n",(0,r.jsx)(d.A,{children:"1/3_D.10.1"}),"\n",(0,r.jsx)(c.A,{items:["AI05-0174-1","AI05-0299-1"]}),"\n",(0,r.jsxs)("p",{children:["This subclause introduces a language-defined package to synchronously release a group of tasks after the number of blocked tasks reaches a specified count value. ",(0,r.jsx)("br",{})]}),"\n",(0,r.jsx)(n.h4,{id:"static-semantics-1",children:"Static Semantics"}),"\n",(0,r.jsx)(d.A,{children:"2/3_D.10.1"}),"\n",(0,r.jsx)(c.A,{items:["AI05-0174-1"]}),"\n",(0,r.jsxs)("p",{children:["The following language-defined library package exists: ",(0,r.jsx)("br",{})]}),"\n",(0,r.jsx)(d.A,{children:"3/5_D.10.1"}),"\n",(0,r.jsx)(c.A,{items:["AI12-0241-1","AI12-0302-1"]}),"\n",(0,r.jsx)(l.A,{language:"ada",children:(0,r.jsxs)(n.p,{children:["package Ada.Synchronous","_","Barriers","\n","   with Preelaborate, Nonblocking, Global =",">"," in out synchronized is","\n","\n",(0,r.jsx)(d.A,{children:"4/3_D.10.1"}),"\nsubtype Barrier","_","Limit is Positive range 1 .. implementation-defined;","\n"]})}),"\n",(0,r.jsxs)(o.A,{children:[(0,r.jsx)(d.A,{children:"4.a.1/3_D.10.1"}),(0,r.jsx)(t.A,{type:"aarm",aarm:"implementation-defined",children:(0,r.jsxs)(n.p,{children:[(0,r.jsx)("b",{}),"The value of Barrier","_","Limit'Last in Synchronous","_","Barriers.",(0,r.jsx)("br",{})]})})]}),"\n",(0,r.jsx)(d.A,{children:"5/3_D.10.1"}),"\n",(0,r.jsxs)(l.A,{language:"ada",children:[(0,r.jsxs)(n.p,{children:["type Synchronous","_","Barrier (Release","_","Threshold : Barrier","_","Limit) is limited private;","\n","\n",(0,r.jsx)(d.A,{children:"6/5_D.10.1"})]}),(0,r.jsx)(c.A,{items:["AI12-0241-1"]}),(0,r.jsxs)(n.p,{children:["procedure Wait","_","For","_","Release (The","_","Barrier : in out Synchronous","_","Barrier;","\n","                               Notified    :    out Boolean)","\n","      with Nonblocking =",">"," False;","\n","\n",(0,r.jsx)(d.A,{children:"7/3_D.10.1"}),"\nprivate","\n","   -- not specified by the language","\n","end Ada.Synchronous","_","Barriers;","\n"]})]}),"\n",(0,r.jsx)(d.A,{children:"8/3_D.10.1"}),"\n",(0,r.jsx)(c.A,{items:["AI05-0174-1"]}),"\n",(0,r.jsxs)("p",{children:["Type Synchronous","_","Barrier needs finalization (see ",(0,r.jsx)("a",{href:"/docs/arm/AA-7/AA-7.6",children:"7.6"}),"). ",(0,r.jsx)("br",{})]}),"\n",(0,r.jsx)(n.h4,{id:"dynamic-semantics-1",children:"Dynamic Semantics"}),"\n",(0,r.jsx)(d.A,{children:"9/3_D.10.1"}),"\n",(0,r.jsx)(c.A,{items:["AI05-0174-1"]}),"\n",(0,r.jsxs)("p",{children:["Each call to Wait","_","For","_","Release blocks the calling task until the number of blocked tasks associated with the Synchronous","_","Barrier object is equal to Release","_","Threshold, at which time all blocked tasks are released. Notified is set to True for one of the released tasks, and set to False for all other released tasks.",(0,r.jsx)("br",{})]}),"\n",(0,r.jsx)(d.A,{children:"10/3_D.10.1"}),"\n",(0,r.jsx)(c.A,{items:["AI05-0174-1"]}),"\n",(0,r.jsxs)("p",{children:["The mechanism for determining which task sets Notified to True is implementation defined.",(0,r.jsx)("br",{})]}),"\n",(0,r.jsx)(d.A,{children:"11/3_D.10.1"}),"\n",(0,r.jsx)(c.A,{items:["AI05-0174-1"]}),"\n",(0,r.jsxs)("p",{children:["Once all tasks have been released, a Synchronous","_","Barrier object may be reused to block another Release","_","Threshold number of tasks.",(0,r.jsx)("br",{})]}),"\n",(0,r.jsx)(d.A,{children:"12/3_D.10.1"}),"\n",(0,r.jsx)(c.A,{items:["AI05-0174-1"]}),"\n",(0,r.jsxs)("p",{children:["As the first step of the finalization of a Synchronous","_","Barrier, each blocked task is unblocked and Program","_","Error is raised at the place of the call to Wait","_","For","_","Release.",(0,r.jsx)("br",{})]}),"\n",(0,r.jsx)(d.A,{children:"13/3_D.10.1"}),"\n",(0,r.jsx)(c.A,{items:["AI05-0174-1"]}),"\n",(0,r.jsxs)("p",{children:["It is implementation defined whether an abnormal task which is waiting on a Synchronous","_","Barrier object is aborted immediately or aborted when the tasks waiting on the object are released. ",(0,r.jsx)("br",{})]}),"\n",(0,r.jsxs)(o.A,{children:[(0,r.jsx)(d.A,{children:"13.a.1/3_D.10.1"}),(0,r.jsx)(t.A,{type:"aarm",aarm:"implementation-defined",children:(0,r.jsxs)(n.p,{children:[(0,r.jsx)("b",{}),"When an aborted task that is waiting on a Synchronous","_","Barrier is aborted.",(0,r.jsx)("br",{})]})})]}),"\n",(0,r.jsx)(d.A,{children:"14/5_D.10.1"}),"\n",(0,r.jsx)(c.A,{items:["AI05-0174-1","AI12-0241-1"]}),"\n",(0,r.jsxs)("p",{children:[(0,r.jsx)("i",{children:"This paragraph was deleted."}),(0,r.jsx)("br",{})]}),"\n",(0,r.jsx)(n.h4,{id:"bounded-run-time-errors-1",children:"Bounded (Run-Time) Errors"}),"\n",(0,r.jsx)(d.A,{children:"15/3_D.10.1"}),"\n",(0,r.jsx)(c.A,{items:["AI05-0174-1"]}),"\n",(0,r.jsxs)("p",{children:["It is a bounded error to call Wait","_","For","_","Release on a Synchronous","_","Barrier object after that object is finalized. If the error is detected, Program","_","Error is raised. Otherwise, the call proceeds normally, which may leave a task blocked forever. ",(0,r.jsx)("br",{})]}),"\n",(0,r.jsx)(o.A,{children:(0,r.jsx)(n.h4,{id:"extensions-to-ada-2005-1",children:"Extensions to Ada 2005"})}),"\n",(0,r.jsxs)(o.A,{children:[(0,r.jsx)(d.A,{children:"15.a/3_D.10.1"}),(0,r.jsx)(c.A,{items:["AI05-0174-1"]}),(0,r.jsx)(t.A,{type:"aarm",aarm:"note",children:(0,r.jsxs)(n.p,{children:["The package Ada.Synchronous","_","Barriers is new. ",(0,r.jsx)("br",{})]})})]})]})}function m(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(A,{...e})}):A(e)}}}]);