"use strict";(self.webpackChunkada_lang_io=self.webpackChunkada_lang_io||[]).push([["6141"],{4376:function(e,r,a){a.r(r),a.d(r,{frontMatter:()=>o,toc:()=>m,default:()=>p,metadata:()=>n,assets:()=>j,contentTitle:()=>x});var n=JSON.parse('{"id":"arm/AA-2/AA-2.5","title":"2.5. Character Literals","description":"This Reference Manual output has not been verified,","source":"@site/docs/arm/AA-2/AA-2.5.mdx","sourceDirName":"arm/AA-2","slug":"/arm/AA-2/AA-2.5","permalink":"/docs/arm/AA-2/AA-2.5","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":13,"frontMatter":{"sidebar_position":13},"sidebar":"referenceManualSidebar","previous":{"title":"2.4. Numeric Literals","permalink":"/docs/arm/AA-2/AA-2.4"},"next":{"title":"2.6. String Literals","permalink":"/docs/arm/AA-2/AA-2.6"}}'),s=a(5893),i=a(65),t=a(3393),l=a(2315),c=a(8514),d=a(1927),h=a(6470);let o={sidebar_position:13},x="2.5. Character Literals",j={},m=[{value:"Syntax",id:"syntax",level:4},{value:"Examples",id:"examples",level:4},{value:"Wording Changes from Ada 83",id:"wording-changes-from-ada-83",level:4}];function A(e){let r={a:"a",admonition:"admonition",h1:"h1",h4:"h4",header:"header",p:"p",...(0,i.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.header,{children:(0,s.jsx)(r.h1,{id:"25-character-literals",children:"2.5. Character Literals"})}),"\n",(0,s.jsx)(r.admonition,{type:"danger",children:(0,s.jsxs)(r.p,{children:["This Reference Manual output has not been verified,\nand may contain omissions or errors.\nReport any problems on the ",(0,s.jsx)(r.a,{href:"https://github.com/ada-lang-io/ada-lang-io/issues/20",children:"tracking issue"})]})}),"\n","\n",(0,s.jsx)(d.Z,{children:"1"}),"\n",(0,s.jsxs)("p",{children:["[A ",(0,s.jsx)("code",{children:(0,s.jsx)("a",{href:"/docs/arm/AA-2/AA-2.5#S0015",children:"character_literal"})})," is formed by enclosing a graphic character between two apostrophe characters.] ",(0,s.jsx)("br",{})]}),"\n",(0,s.jsx)(r.h4,{id:"syntax",children:"Syntax"}),"\n",(0,s.jsx)(d.Z,{children:"2"}),"\n",(0,s.jsx)(c.Z,{children:(0,s.jsxs)(r.p,{children:[(0,s.jsxs)("code",{children:["character","_","literal"]}),(0,s.jsx)("a",{id:"S0015"}),(0,s.jsx)("code",{children:" ::= "}),"'",(0,s.jsxs)("code",{children:["graphic","_","character"]}),"'",(0,s.jsx)("br",{})]})}),"\n",(0,s.jsxs)(l.Z,{children:[(0,s.jsx)(d.Z,{children:"3"}),(0,s.jsx)(t.Z,{type:"aarm",aarm:"note",children:(0,s.jsxs)(r.p,{children:["NOTE   A ",(0,s.jsx)("code",{children:(0,s.jsx)("a",{href:"/docs/arm/AA-2/AA-2.5#S0015",children:"character_literal"})})," is an enumeration literal of a character type. See ",(0,s.jsx)("a",{href:"/docs/arm/AA-3/AA-3.5#Subclause_3.5.2",children:"3.5.2"}),". ",(0,s.jsx)("br",{})]})})]}),"\n",(0,s.jsx)(r.h4,{id:"examples",children:"Examples"}),"\n",(0,s.jsx)(d.Z,{children:"4"}),"\n",(0,s.jsxs)("p",{children:[(0,s.jsx)("i",{children:"Examples of character literals:"})," ",(0,s.jsx)("br",{})]}),"\n",(0,s.jsx)(d.Z,{children:"5/2"}),"\n",(0,s.jsx)(h.Z,{items:["AI95-00433-01"]}),"\n",(0,s.jsx)(c.Z,{language:"ada",children:(0,s.jsxs)(r.p,{children:["'A'     '","*","'     '''     ' '","\n","'L'     '\u041B'     '\u039B'    -- Various els.","\n","'\u221E'     '\u05D0'            -- Big numbers - infinity and aleph.","\n"]})}),"\n",(0,s.jsx)(l.Z,{children:(0,s.jsx)(r.h4,{id:"wording-changes-from-ada-83",children:"Wording Changes from Ada 83"})}),"\n",(0,s.jsxs)(l.Z,{children:[(0,s.jsx)(d.Z,{children:"5.a/3"}),(0,s.jsx)(h.Z,{items:["AI05-0299-1"]}),(0,s.jsx)(t.Z,{type:"aarm",aarm:"note",children:(0,s.jsxs)(r.p,{children:["The definitions of the values of literals are in Clauses 3 and 4, rather than here, since it requires knowledge of types. ",(0,s.jsx)("br",{})]})})]})]})}function p(e={}){let{wrapper:r}={...(0,i.a)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(A,{...e})}):A(e)}}}]);