"use strict";(self.webpackChunkada_lang_io=self.webpackChunkada_lang_io||[]).push([[9385],{78695:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>p,default:()=>m,frontMatter:()=>h,metadata:()=>r,toc:()=>f});const r=JSON.parse('{"id":"arm/AA-A/AA-A.9","title":"A.9 The Generic Package Storage_IO","description":"This Reference Manual output has not been verified,","source":"@site/docs/arm/AA-A/AA-A.9.mdx","sourceDirName":"arm/AA-A","slug":"/arm/AA-A/AA-A.9","permalink":"/docs/arm/AA-A/AA-A.9","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":129,"frontMatter":{"sidebar_position":129},"sidebar":"referenceManualSidebar","previous":{"title":"A.8 Sequential and Direct Files","permalink":"/docs/arm/AA-A/AA-A.8"},"next":{"title":"A.10 Text Input-Output","permalink":"/docs/arm/AA-A/AA-A.10"}}');var a=t(74848),i=t(28453),s=t(13842),o=t(91435),c=t(21432),d=t(79162),l=t(34421);const h={sidebar_position:129},p="A.9 The Generic Package Storage_IO",u={},f=[{value:"Static Semantics",id:"static-semantics",level:4},{value:"Extensions to Ada 83",id:"extensions-to-ada-83",level:4}];function A(e){const n={a:"a",admonition:"admonition",h1:"h1",h4:"h4",header:"header",p:"p",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"a9-the-generic-package-storage_io",children:"A.9 The Generic Package Storage_IO"})}),"\n",(0,a.jsx)(n.admonition,{type:"danger",children:(0,a.jsxs)(n.p,{children:["This Reference Manual output has not been verified,\nand may contain omissions or errors.\nReport any problems on the ",(0,a.jsx)(n.a,{href:"https://github.com/ada-lang-io/ada-lang-io/issues/20",children:"tracking issue"})]})}),"\n","\n",(0,a.jsx)(d.A,{children:"1"}),"\n",(0,a.jsxs)("p",{children:["The generic package Storage","_","IO provides for reading from and writing to an in-memory buffer. This generic package supports the construction of user-defined input-output packages. ",(0,a.jsx)("br",{})]}),"\n",(0,a.jsxs)(o.A,{children:[(0,a.jsx)(d.A,{children:"1.a"}),(0,a.jsx)(s.A,{type:"aarm",aarm:"reason",children:(0,a.jsxs)(n.p,{children:[(0,a.jsx)("strong",{}),"This package exists to allow the portable construction of user-defined direct-access-oriented input-output packages. The Write procedure writes a value of type Element","_","Type into a Storage","_","Array of size Buffer","_","Size, flattening out any implicit levels of indirection used in the representation of the type. The Read procedure reads a value of type Element","_","Type from the buffer, reconstructing any implicit levels of indirection used in the representation of the type. It also properly initializes any type tags that appear within the value, presuming that the buffer was written by a different program and that tag values for the\u201csame\u201d type might vary from one executable to another. ",(0,a.jsx)("br",{})]})})]}),"\n",(0,a.jsx)(n.h4,{id:"static-semantics",children:"Static Semantics"}),"\n",(0,a.jsx)(d.A,{children:"2"}),"\n",(0,a.jsxs)("p",{children:["The generic library package Storage","_","IO has the following declaration: ",(0,a.jsx)("br",{})]}),"\n",(0,a.jsx)(d.A,{children:"3/5"}),"\n",(0,a.jsx)(l.A,{items:["AI12-0302-1"]}),"\n",(0,a.jsx)(c.A,{language:"ada",children:(0,a.jsxs)(n.p,{children:["with Ada.IO","_","Exceptions;","\n","with System.Storage","_","Elements;","\n","generic","\n","   type Element","_","Type is private;","\n","package Ada.Storage","_","IO","\n","   with Preelaborate, Global =",">"," in out synchronized is","\n","\n",(0,a.jsx)(d.A,{children:"4"}),"\nBuffer","_","Size : constant System.Storage","_","Elements.Storage","_","Count :=","\n","      implementation-defined;","\n","   subtype Buffer","_","Type is","\n","      System.Storage","_","Elements.Storage","_","Array(1..Buffer","_","Size);","\n","\n",(0,a.jsx)(d.A,{children:"5"}),"\n-- Input and output operations","\n","\n",(0,a.jsx)(d.A,{children:"6"}),"\nprocedure Read (Buffer : in  Buffer","_","Type; Item : out Element","_","Type);","\n","\n",(0,a.jsx)(d.A,{children:"7"}),"\nprocedure Write(Buffer : out Buffer","_","Type; Item : in  Element","_","Type);","\n","\n",(0,a.jsx)(d.A,{children:"8"}),"\n-- Exceptions","\n","\n",(0,a.jsx)(d.A,{children:"9"}),"\nData","_","Error   : exception renames IO","_","Exceptions.Data","_","Error;","\n","end Ada.Storage","_","IO;","\n"]})}),"\n",(0,a.jsx)(d.A,{children:"10"}),"\n",(0,a.jsxs)("p",{children:["In each instance, the constant Buffer","_","Size has a value that is the size (in storage elements) of the buffer required to represent the content of an object of subtype Element","_","Type, including any implicit levels of indirection used by the implementation. The Read and Write procedures of Storage","_","IO correspond to the Read and Write procedures of Direct","_","IO (see ",(0,a.jsx)("a",{href:"/docs/arm/AA-A/AA-A.8#Subclause_A.8.4",children:"A.8.4"}),"), but with the content of the Item parameter being read from or written into the specified Buffer, rather than an external file.",(0,a.jsx)("br",{})]}),"\n",(0,a.jsxs)(o.A,{children:[(0,a.jsx)(d.A,{children:"10.a"}),(0,a.jsx)(s.A,{type:"aarm",aarm:"reason",children:(0,a.jsxs)(n.p,{children:[(0,a.jsx)("strong",{}),"As with Direct","_","IO, the Element","_","Type formal of Storage","_","IO does not have an ",(0,a.jsx)("code",{children:(0,a.jsx)("a",{href:"/docs/arm/AA-3/AA-3.7#S0060",children:"unknown_discriminant_part"})})," so that there is a well-defined upper bound on the size of the buffer needed to hold the content of an object of the formal subtype (i.e. Buffer","_","Size). If there are no implicit levels of indirection, Buffer","_","Size will typically equal: ",(0,a.jsx)("br",{})]})})]}),"\n",(0,a.jsxs)(o.A,{children:[(0,a.jsx)(d.A,{children:"10.b"}),(0,a.jsx)(c.A,{language:"ada",children:(0,a.jsxs)(n.p,{children:["(Element","_","Type'Size + System.Storage","_","Unit - 1) / System.Storage","_","Unit","\n"]})})]}),"\n",(0,a.jsxs)(o.A,{children:[(0,a.jsx)(d.A,{children:"10.c"}),(0,a.jsx)(s.A,{type:"aarm",aarm:"implementation-defined",children:(0,a.jsxs)(n.p,{children:[(0,a.jsx)("strong",{}),"The value of Buffer","_","Size in Storage","_","IO.",(0,a.jsx)("br",{})]})})]}),"\n",(0,a.jsxs)(o.A,{children:[(0,a.jsx)(d.A,{children:"11"}),(0,a.jsx)(s.A,{type:"aarm",aarm:"note",children:(0,a.jsxs)(n.p,{children:["NOTE   A buffer used for Storage","_","IO holds only one element at a time; an external file used for Direct","_","IO holds a sequence of elements. ",(0,a.jsx)("br",{})]})})]}),"\n",(0,a.jsx)(o.A,{children:(0,a.jsx)(n.h4,{id:"extensions-to-ada-83",children:"Extensions to Ada 83"})}),"\n",(0,a.jsxs)(o.A,{children:[(0,a.jsx)(d.A,{children:"11.a/3"}),(0,a.jsx)(l.A,{items:["AI05-0005-1"]}),(0,a.jsx)(s.A,{type:"aarm",aarm:"note",children:(0,a.jsxs)(n.p,{children:["Storage","_","IO is new in Ada 95. ",(0,a.jsx)("br",{})]})})]})]})}function m(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(A,{...e})}):A(e)}}}]);