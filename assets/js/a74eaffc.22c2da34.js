"use strict";(self.webpackChunkada_lang_io=self.webpackChunkada_lang_io||[]).push([[3686],{5635:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>s,contentTitle:()=>r,default:()=>u,frontMatter:()=>a,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"style-guide/s10/03","title":"10.3 Program Structure","description":"Blocks","source":"@site/docs/style-guide/s10/03.mdx","sourceDirName":"style-guide/s10","slug":"/style-guide/s10/03","permalink":"/docs/style-guide/s10/03","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"10.3 Program Structure"},"sidebar":"styleGuideSidebar","previous":{"title":"10.2 Performance Measurement","permalink":"/docs/style-guide/s10/02"},"next":{"title":"10.4 Data Structures","permalink":"/docs/style-guide/s10/04"}}');var l=i(4848),o=i(8453);const a={title:"10.3 Program Structure"},r=void 0,s={},d=[{value:"Blocks",id:"blocks",level:3},{value:"guideline",id:"guideline",level:4},{value:"example",id:"example",level:4},{value:"rationale",id:"rationale",level:4},{value:"notes",id:"notes",level:4}];function c(e){const n={code:"code",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.h3,{id:"blocks",children:"Blocks"}),"\n",(0,l.jsx)(n.h4,{id:"guideline",children:"guideline"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Use blocks (see Guideline 5.6.9) to introduce late initialization\nwhen measured performance indicates."}),"\n"]}),"\n",(0,l.jsx)(n.h4,{id:"example",children:"example"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-ada",children:"   ...\n   Initial : Matrix;\n\nbegin  -- Find_Solution\n\n   Initialize_Solution_Matrix:\n      for Row in Initial'Range(1) loop\n         for Col in Initial'Range(2) loop\n            Initial (Row, Col) := Get_Value (Row, Col);\n         end loop;\n      end loop Initialize_Solution_Matrix;\n\n   Converge_To_The_Solution:\n      declare\n\n         Solution       : Matrix           := Identity;\n         Min_Iterations : constant Natural := ...;\n\n      begin  -- Converge_To_The_Solution\n         for Iterations in 1 .. Min_Iterations loop\n            Converge (Solution, Initial);\n         end loop;\n\n      end Converge_To_The_Solution;\n\n   ...\nend Find_Solution;\n"})}),"\n",(0,l.jsx)(n.h4,{id:"rationale",children:"rationale"}),"\n",(0,l.jsx)(n.p,{children:"Late initialization allows a compiler more choices in register usage\noptimization. Depending on the circumstance, this may introduce a\nsignificant performance improvement."}),"\n",(0,l.jsx)(n.p,{children:"Some compilers incur a performance penalty when declarative blocks are\nintroduced. Careful analysis and timing tests by the programmer may\nidentify those declarative blocks that should be removed."}),"\n",(0,l.jsx)(n.h4,{id:"notes",children:"notes"}),"\n",(0,l.jsx)(n.p,{children:"It is difficult to accurately predict through code inspections which\ndeclarative blocks improve performance and which degrade performance.\nHowever, with these general guidelines and a familiarity with the\nparticular implementation, performance can be improved."})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(c,{...e})}):c(e)}}}]);