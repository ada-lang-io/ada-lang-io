"use strict";(self.webpackChunkada_lang_io=self.webpackChunkada_lang_io||[]).push([[8263],{8437:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>A,contentTitle:()=>h,default:()=>m,frontMatter:()=>l,metadata:()=>i,toc:()=>x});const i=JSON.parse('{"id":"arm/AA-J/AA-J.13","title":"J.13. Dependence Restriction Identifiers","description":"This Reference Manual output has not been verified,","source":"@site/docs/arm/AA-J/AA-J.13.mdx","sourceDirName":"arm/AA-J","slug":"/arm/AA-J/AA-J.13","permalink":"/docs/arm/AA-J/AA-J.13","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":206,"frontMatter":{"sidebar_position":206},"sidebar":"referenceManualSidebar","previous":{"title":"J.12. Pragma Interface","permalink":"/docs/arm/AA-J/AA-J.12"},"next":{"title":"J.14. Character and Wide_Character Conversion Functions","permalink":"/docs/arm/AA-J/AA-J.14"}}');var r=s(4848),d=s(8453),a=s(3204),t=s(4220),c=(s(8069),s(8011)),o=s(6465);const l={sidebar_position:206},h="J.13. Dependence Restriction Identifiers",A={},x=[{value:"Static Semantics",id:"static-semantics",level:4},{value:"Wording Changes from Ada 95",id:"wording-changes-from-ada-95",level:4}];function j(e){const n={a:"a",admonition:"admonition",h1:"h1",h4:"h4",header:"header",p:"p",...(0,d.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"j13-dependence-restriction-identifiers",children:"J.13. Dependence Restriction Identifiers"})}),"\n",(0,r.jsx)(n.admonition,{type:"danger",children:(0,r.jsxs)(n.p,{children:["This Reference Manual output has not been verified,\nand may contain omissions or errors.\nReport any problems on the ",(0,r.jsx)(n.a,{href:"https://github.com/ada-lang-io/ada-lang-io/issues/20",children:"tracking issue"})]})}),"\n","\n",(0,r.jsx)(c.A,{children:"1/2"}),"\n",(0,r.jsx)(o.A,{items:["AI95-00394-01"]}),"\n",(0,r.jsxs)("p",{children:["The following restrictions involve dependence on specific language-defined units. The more general restriction No","_","Dependence (see ",(0,r.jsx)("a",{href:"/docs/arm/AA-13/AA-13.12#Subclause_13.12.1",children:"13.12.1"}),") should be used for this purpose. ",(0,r.jsx)("br",{})]}),"\n",(0,r.jsx)(n.h4,{id:"static-semantics",children:"Static Semantics"}),"\n",(0,r.jsx)(c.A,{children:"2/2"}),"\n",(0,r.jsx)(o.A,{items:["AI95-00394-01"]}),"\n",(0,r.jsxs)("p",{children:["The following ",(0,r.jsxs)("i",{children:["restriction","_"]}),(0,r.jsx)("code",{children:(0,r.jsx)("a",{href:"/docs/arm/AA-2/AA-2.3#S0002",children:"identifier"})}),"s exist:",(0,r.jsx)("br",{})]}),"\n",(0,r.jsx)(c.A,{children:"3/2"}),"\n",(0,r.jsx)(o.A,{items:["AI95-00394-01"]}),"\n",(0,r.jsxs)("dt",{children:[(0,r.jsx)("br",{}),"No","_","Asynchronous","_","Control "]}),"\n",(0,r.jsxs)("dl",{children:[(0,r.jsxs)("dd",{children:["Semantic dependence on the predefined package Asynchronous","_","Task","_","Control is not allowed.",(0,r.jsx)("br",{})]}),(0,r.jsx)(c.A,{children:"4/2"}),(0,r.jsx)(o.A,{items:["AI95-00394-01"]}),(0,r.jsxs)("dt",{children:[(0,r.jsx)("br",{}),"No","_","Unchecked","_","Conversion "]}),(0,r.jsxs)("dd",{children:["Semantic dependence on the predefined generic function Unchecked","_","Conversion is not allowed.",(0,r.jsx)("br",{})]}),(0,r.jsx)(c.A,{children:"5/2"}),(0,r.jsx)(o.A,{items:["AI95-00394-01"]}),(0,r.jsxs)("dt",{children:[(0,r.jsx)("br",{}),"No","_","Unchecked","_","Deallocation "]}),(0,r.jsxs)("dd",{children:["Semantic dependence on the predefined generic procedure Unchecked","_","Deallocation is not allowed.",(0,r.jsx)("br",{})]})]}),"\n",(0,r.jsx)(t.A,{children:(0,r.jsx)(n.h4,{id:"wording-changes-from-ada-95",children:"Wording Changes from Ada 95"})}),"\n",(0,r.jsxs)(t.A,{children:[(0,r.jsx)(c.A,{children:"5.a/3"}),(0,r.jsx)(o.A,{items:["AI95-00394-01","AI05-0299-1"]}),(0,r.jsx)(a.A,{type:"aarm",aarm:"note",children:(0,r.jsxs)(n.p,{children:["This subclause is new. These restrictions are replaced by the more general No","_","Dependence (see ",(0,r.jsx)("a",{href:"/docs/arm/AA-13/AA-13.12#Subclause_13.12.1",children:"13.12.1"}),"). ",(0,r.jsx)("br",{})]})})]})]})}function m(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(j,{...e})}):j(e)}}}]);