"use strict";(self.webpackChunkada_lang_io=self.webpackChunkada_lang_io||[]).push([[4705],{4226:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>i,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"style-guide/s10/01","title":"10.1 Performance Issues","description":"Performance has at least four aspects: execution speed, code size,","source":"@site/docs/style-guide/s10/01.mdx","sourceDirName":"style-guide/s10","slug":"/style-guide/s10/01","permalink":"/docs/style-guide/s10/01","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"10.1 Performance Issues"},"sidebar":"styleGuideSidebar","previous":{"title":"10. Improving Performance","permalink":"/docs/style-guide/s10/"},"next":{"title":"10.2 Performance Measurement","permalink":"/docs/style-guide/s10/02"}}');var o=s(4848),a=s(8453);const i={title:"10.1 Performance Issues"},r=void 0,c={},l=[];function d(e){const t={p:"p",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.p,{children:"Performance has at least four aspects: execution speed, code size,\ncompilation speed, and linking speed. Although all four are important,\nmost people think of execution speed when performance is mentioned, and\nmost of the guidelines in this chapter focus on execution speed."}),"\n",(0,o.jsx)(t.p,{children:'Performance is influenced by many factors, including the compilation\nsoftware, hardware, system load, and coding style. While only coding\nstyle is typically under the control of the programmer, the other\nfactors have so much influence that it is impossible to make flat\nstatements such as "case statements are more efficient than if-then-else\nstructures." When performance is critical, you cannot assume that a\ncoding style that proves more efficient on one system will also be more\nefficient on another. Decisions made for the sake of performance must be\nmade on the basis of testing the alternatives on the actual system on\nwhich the application will be fielded.'})]})}function u(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}}}]);