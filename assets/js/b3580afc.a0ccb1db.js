"use strict";(self.webpackChunkada_lang_io=self.webpackChunkada_lang_io||[]).push([[1125],{25724:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"style-guide/s6/04","title":"6.4 Summary","description":"concurrency options","source":"@site/docs/style-guide/s6/04.mdx","sourceDirName":"style-guide/s6","slug":"/style-guide/s6/04","permalink":"/docs/style-guide/s6/04","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"title":"6.4 Summary"},"sidebar":"styleGuideSidebar","previous":{"title":"6.3 Termination","permalink":"/docs/style-guide/s6/03"},"next":{"title":"7. Portability","permalink":"/docs/style-guide/s7/"}}');var s=i(74848),r=i(28453);const a={title:"6.4 Summary"},o=void 0,l={},d=[{value:"concurrency options",id:"concurrency-options",level:3},{value:"communication",id:"communication",level:3},{value:"termination",id:"termination",level:3}];function c(e){const n={a:"a",admonition:"admonition",h3:"h3",li:"li",p:"p",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h3,{id:"concurrency-options",children:"concurrency options"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Consider using protected objects to provide mutually exclusive\naccess to data."}),"\n",(0,s.jsx)(n.li,{children:"Consider using protected objects to control or synchronize access to\ndata shared by multiple tasks ."}),"\n",(0,s.jsx)(n.li,{children:"Consider using protected objects to implement synchronization, such\nas a passive resource monitor."}),"\n",(0,s.jsx)(n.li,{children:"Consider encapsulating protected objects in the private part or body\nof a package."}),"\n",(0,s.jsx)(n.li,{children:"Consider using a protected procedure to implement an interrupt\nhandler."}),"\n",(0,s.jsx)(n.li,{children:"Do not attach a protected procedure handler to a hardware interrupt\nif that interrupt has a maximum priority greater than the ceiling\npriority assigned to the handler."}),"\n",(0,s.jsx)(n.li,{children:"Avoid the use of global variables in entry barriers."}),"\n",(0,s.jsx)(n.li,{children:"Avoid the use of barrier expressions with side effects."}),"\n",(0,s.jsx)(n.li,{children:"Use tasks to model selected asynchronous threads of control within\nthe problem domain."}),"\n",(0,s.jsx)(n.li,{children:"Consider using tasks to define concurrent algorithms."}),"\n",(0,s.jsx)(n.li,{children:"Consider using rendezvous when your application requires synchronous\nunbuffered communication."}),"\n",(0,s.jsx)(n.li,{children:"Consider using discriminants to minimize the need for an explicit\ninitialization operation (Rationale 1995, \xa79.1)."}),"\n",(0,s.jsx)(n.li,{children:"Consider using discriminants to control composite components of the\nprotected objects, including setting the size of an entry family\n(Rationale 1995, \xa79.1)."}),"\n",(0,s.jsx)(n.li,{children:"Consider using a discriminant to set the priority of a protected\nobject (Rationale 1995, \xa79.1)."}),"\n",(0,s.jsx)(n.li,{children:"Consider using a discriminant to identify an interrupt to a\nprotected object (Rationale 1995, \xa79.1)."}),"\n",(0,s.jsxs)(n.li,{children:["Consider declaring a task type with a discriminant to indicate\n(Rationale 1995, \xa79.6):","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Priority, storage size, and size of entry families of individual\ntasks of a type"}),"\n",(0,s.jsx)(n.li,{children:"Data associated with a task (through an access discriminant)"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:"Consider using single task declarations to declare unique instances\nof concurrent tasks."}),"\n",(0,s.jsx)(n.li,{children:"Consider using single protected declarations to declare unique\ninstances of protected objects."}),"\n",(0,s.jsx)(n.li,{children:"Minimize dynamic creation of tasks because of the potentially high\nstartup overhead; reuse tasks by having them wait for new work on\nsome appropriate entry queue."}),"\n",(0,s.jsx)(n.li,{children:"Do not rely on pragma Priority unless your compiler supports the\nReal-Time Annex (Ada Reference Manual 1995, Annex D) and priority\nscheduling."}),"\n",(0,s.jsx)(n.li,{children:"Minimize risk of priority inversion by use of protected objects and\nceiling priority."}),"\n",(0,s.jsx)(n.li,{children:"Do not rely upon task priorities to achieve a particular sequence of\ntask execution."}),"\n",(0,s.jsx)(n.li,{children:"Do not depend on a particular delay being achievable (Nissen and\nWallis 1984)."}),"\n",(0,s.jsx)(n.li,{children:"Use a delay until not a delay statement to delay until a specific\ntime has been reached."}),"\n",(0,s.jsx)(n.li,{children:"Avoid using a busy waiting loop instead of a delay."}),"\n",(0,s.jsx)(n.li,{children:"Carefully consider the placement of components of protected types\nwithin a tagged type inheritance hierarchy."}),"\n",(0,s.jsx)(n.li,{children:"Consider using generics to provide extensibility of data types\nrequiring the restrictions provided by protected objects."}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"communication",children:"communication"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Minimize the work performed during a rendezvous ."}),"\n",(0,s.jsx)(n.li,{children:"Minimize the work performed in the selective accept loop of a task."}),"\n",(0,s.jsx)(n.li,{children:"Consider using protected objects for data synchronization and\ncommunication."}),"\n",(0,s.jsx)(n.li,{children:"Provide a handler for exception Program_Error whenever you cannot\navoid a selectiveaccept statement whose alternatives can all be\nclosed (Honeywell 1986)."}),"\n",(0,s.jsx)(n.li,{children:"Make systematic use of handlers for Tasking_Error."}),"\n",(0,s.jsx)(n.li,{children:"Be prepared to handle exceptions during a rendezvous ."}),"\n",(0,s.jsx)(n.li,{children:"Consider using a when others exception handler."}),"\n",(0,s.jsx)(n.li,{children:"Do not depend on the values of the task attributes 'Callable or\n'Terminated (Nissen and Wallis 1984)."}),"\n",(0,s.jsx)(n.li,{children:"Do not depend on attributes to avoid Tasking_Error on an entry\ncall."}),"\n",(0,s.jsx)(n.li,{children:"For tasks, do not depend on the value of the entry attribute 'Count."}),"\n",(0,s.jsx)(n.li,{children:"Using the 'Count attribute with protected entries is more reliable\nthan using the 'Count attribute with task entries."}),"\n",(0,s.jsx)(n.li,{children:"Use calls on protected subprograms or entries to pass data between\ntasks rather than unprotected shared variables."}),"\n",(0,s.jsx)(n.li,{children:"Do not use unprotected shared variables as a task synchronization\ndevice."}),"\n",(0,s.jsx)(n.li,{children:"Do not reference nonlocal variables in a guard ."}),"\n",(0,s.jsx)(n.li,{children:"If an unprotected shared variable is necessary, use the pragma\nVolatile or Atomic."}),"\n",(0,s.jsx)(n.li,{children:"Use caution with conditional entry calls to task entries."}),"\n",(0,s.jsx)(n.li,{children:"Use caution with selective accepts with else parts."}),"\n",(0,s.jsx)(n.li,{children:"Do not depend upon a particular delay in timed entry calls to task\nentries."}),"\n",(0,s.jsx)(n.li,{children:"Do not depend upon a particular delay in selective accepts with\ndelay alternatives."}),"\n",(0,s.jsx)(n.li,{children:"Consider using protected objects instead of the rendezvous for\ndata-oriented synchronization."}),"\n",(0,s.jsx)(n.li,{children:"Minimize the number of accept and select statements per task ."}),"\n",(0,s.jsx)(n.li,{children:"Minimize the number of accept statements per entry."}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"termination",children:"termination"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Consider using an exception handler for a rendezvous within the main\nloop inside each task."}),"\n",(0,s.jsx)(n.li,{children:"Do not create nonterminating tasks unintentionally."}),"\n",(0,s.jsx)(n.li,{children:"Explicitly shut down tasks that depend on library packages."}),"\n",(0,s.jsx)(n.li,{children:"Confirm that a task is terminated before freeing it with\nAda.Unchecked_Deallocation."}),"\n",(0,s.jsx)(n.li,{children:"Consider using a select statement with a terminate alternative\nrather than an accept statement alone."}),"\n",(0,s.jsx)(n.li,{children:"Consider providing a terminate alternative for every selective\naccept that does not require an else part or a delay."}),"\n",(0,s.jsx)(n.li,{children:"Do not declare or create a task within a user-defined Finalize\nprocedure after the environment task has finished waiting for other\ntasks."}),"\n",(0,s.jsx)(n.li,{children:"Avoid using the abort statement."}),"\n",(0,s.jsx)(n.li,{children:"Consider using the asynchronous select statement rather than the\nabort statement."}),"\n",(0,s.jsx)(n.li,{children:"Minimize uses of the asynchronous select statement."}),"\n",(0,s.jsx)(n.li,{children:"Avoid assigning nonatomic global objects from a task or from the\nabortable part of an asynchronous select statement."}),"\n",(0,s.jsx)(n.li,{children:"Place an exception handler for others at the end of a task body."}),"\n",(0,s.jsx)(n.li,{children:"Consider having each exception handler at the end of a task body\nreport the task's demise."}),"\n",(0,s.jsx)(n.li,{children:"Do not rely on the task status to determine whether a rendezvous can\nbe made with the task."}),"\n",(0,s.jsx)(n.li,{children:"Do not call a task entry that directly or indirectly results in a\ncall to an entry of the original calling task."}),"\n",(0,s.jsx)(n.li,{children:"Avoid race conditions in setting an exit status code from the main\nprogram when using the procedure\nAda.Command_Line.Set_Exit_Status."}),"\n",(0,s.jsx)(n.li,{children:"In a program with multiple tasks, encapsulate, serialize, and check\ncalls to the procedure Ada.Command_Line.Set_Exit_Status."}),"\n"]}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsxs)(n.p,{children:['This page of the "Ada Quality and Style Guide" has been adapted from the\noriginal work at ',(0,s.jsx)(n.a,{href:"https://en.wikibooks.org/wiki/Ada_Style_Guide",children:"https://en.wikibooks.org/wiki/Ada_Style_Guide"}),", which is\nlicensed under the\n",(0,s.jsx)(n.a,{href:"https://creativecommons.org/licenses/by-sa/3.0/",children:"Creative Commons Attribution-ShareAlike License"}),";\nadditional terms may apply. Page not endorsed by Wikibooks or the Ada\nStyle Guide Wikibook authors. This page is licensed under the same license\nas the original work."]})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}}}]);