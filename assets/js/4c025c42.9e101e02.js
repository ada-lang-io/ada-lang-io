"use strict";(self.webpackChunkada_lang_io=self.webpackChunkada_lang_io||[]).push([["8009"],{7371:function(e,n,t){t.r(n),t.d(n,{frontMatter:()=>l,toc:()=>u,default:()=>p,metadata:()=>a,assets:()=>m,contentTitle:()=>h});var a=JSON.parse('{"id":"arm/AA-H/AA-H.2","title":"H.2. Documentation of Implementation Decisions","description":"This Reference Manual output has not been verified,","source":"@site/docs/arm/AA-H/AA-H.2.mdx","sourceDirName":"arm/AA-H","slug":"/arm/AA-H/AA-H.2","permalink":"/docs/arm/AA-H/AA-H.2","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":187,"frontMatter":{"sidebar_position":187},"sidebar":"referenceManualSidebar","previous":{"title":"H.1. Pragma Normalize_Scalars","permalink":"/docs/arm/AA-H/AA-H.1"},"next":{"title":"H.3. Reviewable Object Code","permalink":"/docs/arm/AA-H/AA-H.3"}}'),i=t(5893),s=t(65),r=t(3393),o=t(2315);t(8514);var c=t(1927),d=t(6470);let l={sidebar_position:187},h="H.2. Documentation of Implementation Decisions",m={},u=[{value:"Documentation Requirements",id:"documentation-requirements",level:4}];function f(e){let n={a:"a",admonition:"admonition",h1:"h1",h4:"h4",header:"header",p:"p",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"h2-documentation-of-implementation-decisions",children:"H.2. Documentation of Implementation Decisions"})}),"\n",(0,i.jsx)(n.admonition,{type:"danger",children:(0,i.jsxs)(n.p,{children:["This Reference Manual output has not been verified,\nand may contain omissions or errors.\nReport any problems on the ",(0,i.jsx)(n.a,{href:"https://github.com/ada-lang-io/ada-lang-io/issues/20",children:"tracking issue"})]})}),"\n","\n",(0,i.jsx)(n.h4,{id:"documentation-requirements",children:"Documentation Requirements"}),"\n",(0,i.jsx)(c.Z,{children:"1/5"}),"\n",(0,i.jsx)(d.Z,{items:["AI12-0439-1"]}),"\n",(0,i.jsxs)("p",{children:["The implementation shall document the range of effects for each situation that the language rules identify as either a bounded error or as having an unspecified effect. If the implementation can constrain the effects of erroneous execution for a given construct, then it shall document such constraints. [The documentation may be provided either independently of any compilation unit or partition, or as part of an annotated listing for a given unit or partition. See also ",(0,i.jsx)("a",{href:"/docs/arm/AA-1/AA-1.1#Subclause_1.1.3",children:"1.1.3"}),", and ",(0,i.jsx)("a",{href:"/docs/arm/AA-1/AA-1.1#Subclause_1.1.2",children:"1.1.2"}),".] ",(0,i.jsx)("br",{})]}),"\n",(0,i.jsxs)(o.Z,{children:[(0,i.jsx)(c.Z,{children:"1.a/2"}),(0,i.jsxs)(r.Z,{type:"aarm",aarm:"note",children:[(0,i.jsx)("i",{children:"This paragraph was deleted."}),(0,i.jsx)("br",{})]})]}),"\n",(0,i.jsxs)(o.Z,{children:[(0,i.jsx)(c.Z,{children:"1.b/2"}),(0,i.jsx)(r.Z,{type:"aarm",aarm:"note",children:(0,i.jsxs)(n.p,{children:[(0,i.jsx)("b",{children:"Documentation Requirement: "}),"The range of effects for each bounded error and each unspecified effect. If the effects of a given erroneous construct are constrained, the constraints shall be documented.",(0,i.jsx)("br",{})]})})]}),"\n",(0,i.jsxs)(o.Z,{children:[(0,i.jsx)(c.Z,{children:"2"}),(0,i.jsx)(r.Z,{type:"aarm",aarm:"note",children:(0,i.jsxs)(n.p,{children:["NOTE   Among the situations to be documented are the conventions chosen for parameter passing, the methods used for the management of run-time storage, and the method used to evaluate numeric expressions if this involves extended range or extra precision.",(0,i.jsx)("br",{})]})})]}),"\n",(0,i.jsxs)(o.Z,{children:[(0,i.jsx)(c.Z,{children:"2.a"}),(0,i.jsx)(r.Z,{type:"aarm",aarm:"discussion",children:(0,i.jsxs)(n.p,{children:[(0,i.jsx)("b",{}),"Look up \u201Cunspecified\u201D and \u201Cerroneous execution\u201D in the index for a list of the cases.",(0,i.jsx)("br",{})]})})]}),"\n",(0,i.jsxs)(o.Z,{children:[(0,i.jsx)(c.Z,{children:"2.b"}),(0,i.jsx)(r.Z,{type:"aarm",aarm:"note",children:(0,i.jsxs)(n.p,{children:["The management of run-time storage is particularly important. For safety applications, it is often necessary to show that a program cannot raise Storage","_","Error, and for security applications that information cannot leak via the run-time system. Users are likely to prefer a simple storage model that can be easily validated.",(0,i.jsx)("br",{})]})})]}),"\n",(0,i.jsxs)(o.Z,{children:[(0,i.jsx)(c.Z,{children:"2.c"}),(0,i.jsx)(r.Z,{type:"aarm",aarm:"note",children:(0,i.jsxs)(n.p,{children:["The documentation could helpfully take into account that users may well adopt a subset to avoid some forms of erroneous execution, for instance, not using the abort statement, so that the effects of a partly completed ",(0,i.jsx)("code",{children:(0,i.jsx)("a",{href:"/docs/arm/AA-5/AA-5.2#S0173",children:"assignment_statement"})})," do not have to be considered in the validation of a program (see ",(0,i.jsx)("a",{href:"/docs/arm/AA-9/AA-9.8",children:"9.8"}),"). For this reason documentation linked to an actual compilation may be most useful. Similarly, an implementation may be able to take into account use of the Restrictions pragma. ",(0,i.jsx)("br",{})]})})]})]})}function p(e={}){let{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(f,{...e})}):f(e)}}}]);