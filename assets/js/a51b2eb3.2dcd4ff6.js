"use strict";(self.webpackChunkada_lang_io=self.webpackChunkada_lang_io||[]).push([[1814],{5423:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>t,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"learn/getting-started/macos-issues/issues","title":"Issues","description":"- Issues","source":"@site/docs/learn/getting-started/macos-issues/issues.md","sourceDirName":"learn/getting-started/macos-issues","slug":"/learn/getting-started/macos-issues/issues","permalink":"/docs/learn/getting-started/macos-issues/issues","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":100,"frontMatter":{"sidebar_position":100},"sidebar":"tutorialSidebar","previous":{"title":"Crates for macOS","permalink":"/docs/learn/getting-started/macos-issues/crates"},"next":{"title":"Tutorial","permalink":"/docs/category/tutorial"}}');var r=s(4848),l=s(8453);const t={sidebar_position:100},a="Issues",o={},d=[{value:"<a>C compilation failure</a>",id:"c-compilation-failure",level:2},{value:"<a>Linking error</a>",id:"linking-error",level:2},{value:"<a>Unhandled exceptions</a>",id:"unhandled-exceptions",level:2},{value:"<a>Transparent solution</a>",id:"transparent-solution",level:3}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"issues",children:"Issues"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Issues","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#c-compilation-failure",children:"C compilation failure"})}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"#linking-error",children:"Linking error"})," (",(0,r.jsx)(n.code,{children:"ld: Assertion failed"}),")"]}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#unhandled-exceptions",children:"Unhandled exceptions"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"c-compilation-failure",children:(0,r.jsx)("a",{name:"c-compilation-failure",children:"C compilation failure"})}),"\n",(0,r.jsx)(n.p,{children:"If you get apparently self-contradictory C- or C++-related errors like"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sh",children:"$ gcc -c hello.c\nIn file included from hello.c:1:\n/opt/gcc-14.2.0-1-aarch64/lib/gcc/aarch64-apple-darwin21/14.2.0/include-fixed/stdio.h:83:8:\n error: unknown type name \u2018FILE\u2019\n   83 | extern FILE *__stdinp;\n      |        ^~~~\n/opt/gcc-14.2.0-1-aarch64/lib/gcc/aarch64-apple-darwin21/14.2.0/include-fixed/stdio.h:81:1:\n note: \u2018FILE\u2019 is defined in header \u2018<stdio.h>\u2019; this is probably\n fixable by adding \u2018#include <stdio.h>\u2019\n   80 | #include <sys/_types/_seek_set.h>\n  +++ |+#include <stdio.h>\n   81 |\n"})}),"\n",(0,r.jsxs)(n.p,{children:["it's because your Software Development Kit (SDK: Xcode or the Command Line Tools) has been upgraded to version 16, and your installed compiler hasn't been built to handle it; see ",(0,r.jsx)(n.a,{href:"https://gcc.gnu.org/bugzilla/show_bug.cgi?id=116980",children:"GCC PR 116980"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"Until that's resolved, the only general solution is to revert to SDK15."}),"\n",(0,r.jsx)(n.h2,{id:"linking-error",children:(0,r.jsx)("a",{name:"linking-error",children:"Linking error"})}),"\n",(0,r.jsx)(n.p,{children:"If you're running macOS 13.5 (Ventura) or later, you'll probably have been offered updates to version 15 of Xcode/the Command Line Tools. With version 15.0, we encountered the, rather fundamental, problem that all links failed, with a slew of messages including"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"ld: Assertion failed: (resultIndex < sectData.atoms.size()), function findAtom, file Relocations.cpp, line 1336.\n"})}),"\n",(0,r.jsxs)(n.p,{children:["This happened because Apple had introduced a new linker (",(0,r.jsx)(n.code,{children:"ld"}),"). A workround for this issue turned out to be to use a version of the older linker included in the SDK, ",(0,r.jsx)(n.code,{children:"ld-classic"}),". You can tell ",(0,r.jsx)(n.code,{children:"gprbuild"})," or ",(0,r.jsx)(n.code,{children:"gnatmake"})," to do this from the command line by adding"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"-largs -Wl,-ld_classic\n"})}),"\n",(0,r.jsxs)(n.p,{children:["(notice the change from dash to underscore!) This fix doesn't work with older SDKs that don't have ",(0,r.jsx)(n.code,{children:"ld-classic"})," - they would interpret it as looking for a library ",(0,r.jsx)(n.code,{children:"libd_classic"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["The updated SDKs (version 15.1) fixed this issue, so you no longer needed the workround; but, if you do, see the notes on the ",(0,r.jsx)(n.a,{href:"#transparent-solution",children:"transparent solution"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"unhandled-exceptions",children:(0,r.jsx)("a",{name:"unhandled-exceptions",children:"Unhandled exceptions"})}),"\n",(0,r.jsx)(n.p,{children:"It turns out that there's a more subtle problem than the blatant failure to link: exception handling can be unreliable. If you get unhandled exceptions from code with a clearly visible exception handler, this is what's going on."}),"\n",(0,r.jsxs)(n.p,{children:["This issue is also solved by using the classic linker: see the notes on the ",(0,r.jsx)(n.a,{href:"#transparent-solution",children:"transparent solution"}),". Alternatively, upgrade to a released GCC 14 compiler."]}),"\n",(0,r.jsx)(n.h3,{id:"transparent-solution",children:(0,r.jsx)("a",{name:"transparent-solution",children:"Transparent solution"})}),"\n",(0,r.jsxs)(n.p,{children:["We have a solution which transparently invokes ",(0,r.jsx)(n.code,{children:"ld-classic"})," if it's present in the SDK. The solution is to place a 'shim' named ",(0,r.jsx)(n.code,{children:"ld"})," where GCC will look for it and invoke it instead of directly calling ",(0,r.jsx)(n.code,{children:"/usr/bin/ld"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["The latest release of the installer can be found ",(0,r.jsx)(n.a,{href:"https://github.com/simonjwright/xcode_15_fix/releases",children:"here"}),"."]})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}}}]);