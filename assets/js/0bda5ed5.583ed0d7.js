"use strict";(self.webpackChunkada_lang_io=self.webpackChunkada_lang_io||[]).push([["1419"],{48986:function(e,n,a){a.r(n),a.d(n,{frontMatter:()=>l,toc:()=>d,default:()=>h,metadata:()=>r,assets:()=>u,contentTitle:()=>c});var r=JSON.parse('{"id":"learn/lang/advanced-techniques","title":"RAII","description":"Ada supports scope-based resources, also called RAII","source":"@site/docs/learn/lang/advanced-techniques.mdx","sourceDirName":"learn/lang","slug":"/learn/lang/advanced-techniques","permalink":"/docs/learn/lang/advanced-techniques","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Advanced Techniques","permalink":"/docs/category/advanced-techniques"},"next":{"title":"Tasks","permalink":"/docs/learn/lang/tasks"}}'),t=a(85893),i=a(50065),o=a(5525),s=a(47902);let l={sidebar_position:1},c="RAII",u={},d=[{value:"Timing out on a Blocking Operation",id:"timing-out-on-a-blocking-operation",level:2},{value:"Waiting for all tasks to complete",id:"waiting-for-all-tasks-to-complete",level:2}];function p(e){let n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,i.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"raii",children:"RAII"})}),"\n",(0,t.jsxs)(n.p,{children:["Ada supports scope-based resources, also called ",(0,t.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Resource_acquisition_is_initialization",children:"RAII"}),"\nby extending the ",(0,t.jsx)(n.code,{children:"Controlled"})," or ",(0,t.jsx)(n.code,{children:"LimitedControlled"})," types."]}),"\n",(0,t.jsxs)(s.Z,{children:[(0,t.jsx)(o.Z,{value:"ada",label:"Ada",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ada",children:"with Ada.Finalization;  use Ada.Finalization;\npackage Sample is\n    -- \"Controlled\" types exhibit RAII behavior:\n    type Capricorn is new Controlled with\n    record\n        Dummy : Integer;\n    end record;\n\n    overriding procedure Initialize(C : in out Capricorn);\n        -- Initialization after creation.\n\n    overriding procedure Adjust(C : in out Capricorn);\n        -- Adjustment after assignment.\n\n    overriding procedure Finalize(C : in out Capricorn);\n        -- Different than Java's Finalize, in that it's deterministic and more\n        -- analogous to a C++ destructor.\n\n    -- If you don't want one of these do to anything, you can avoid writing a\n    -- definition in the package body and define the procedure as \"do nothing\"\n    -- by writing:\n    --\n    -- overriding procedure Finalize(C : in out Capricorn) is null;\nend Sample;\n\npackage body Sample is\n    procedure Initialize(C : in out Capricorn) is\n    begin\n        -- Do something on initialize.\n    end Initialize;\n\n    procedure Adjust(C : in out Capricorn) is\n    begin\n        -- Adjustment after assignment.\n        --\n        -- If you want Adjust to do the same as Initialize and use the same object\n        -- code without generating a separate function, you can just do\n        -- procedure Adjust(C: in out Capricorn) renames Initialize;\n    end Adjust;\n\n    overriding procedure Finalize(C : in out Capricorn);\n        -- Different than Java's Finalize, in that it's deterministic and more\n        -- analogous to a C++ destructor.\nend Sample;\n"})})}),(0,t.jsx)(o.Z,{value:"cpp",label:"C++",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-cpp",children:"class Capricorn {\npublic:\n// Similar for all constructors.\nCapricorn () {}\n\n// Copy constructor.\nCapricorn(const Capricorn&) {}\n\n// Move constructor.\nCapricorn(Capricorn&&) {}\n\n// Copy assignment.\nCapricorn& operator=(const Capricorn&) { return *this; }\n\n// Move assignment.\nCapricorn& operator=(Capricorn&&) { return *this; }\n\n// Destructor.\n~Capricorn () {}\n};\n"})})})]}),"\n",(0,t.jsx)(n.h2,{id:"timing-out-on-a-blocking-operation",children:"Timing out on a Blocking Operation"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ada",children:"task body My_Task is\n    Elem : A_Queue_Element;\nbegin\n    loop -- processing loop\n        select\n            A_Queue.Blocking_Queue (Elem);\n        or\n            -- Stop processing after a 1 second timeout. Removing this delay causes\n            -- immediate exit if a block occurs.\n            delay 1.0;\n            exit;\n        end select;\n\n        -- ... process Elem ...\n    end loop\nend My_Task;\n"})}),"\n",(0,t.jsx)(n.h2,{id:"waiting-for-all-tasks-to-complete",children:"Waiting for all tasks to complete"}),"\n",(0,t.jsxs)(n.p,{children:["A list of statements doesn't exit until all tasks are complete, so by using\n",(0,t.jsx)(n.code,{children:"declare ... begin ... end"})," you can wait until all your tasks are done."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-ada",children:"declare\n    A_Task : My_Task;  -- task which needs to finish before more processing\nbegin\n    null; -- Just wait until the task is done.\nend;\n\n-- Continue other operations here.\n"})})]})}function h(e={}){let{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}},5525:function(e,n,a){a.d(n,{Z:()=>i});var r=a(85893);a(67294);var t=a(74904);function i({children:e,hidden:n,className:a}){return(0,r.jsx)("div",{role:"tabpanel",className:(0,t.Z)("tabItem_Ymn6",a),hidden:n,children:e})}},47902:function(e,n,a){a.d(n,{Z:()=>v});var r=a(85893),t=a(67294),i=a(74904),o=a(69599),s=a(16550),l=a(32e3),c=a(4520),u=a(38341),d=a(76009);function p(e){return t.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,t.isValidElement)(e)&&function(e){let{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function h({value:e,tabValues:n}){return n.some(n=>n.value===e)}var m=a(7227);function f({className:e,block:n,selectedValue:a,selectValue:t,tabValues:s}){let l=[],{blockElementScrollPositionUntilNextRender:c}=(0,o.o5)(),u=e=>{let n=e.currentTarget,r=s[l.indexOf(n)].value;r!==a&&(c(n),t(r))},d=e=>{let n=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{let a=l.indexOf(e.currentTarget)+1;n=l[a]??l[0];break}case"ArrowLeft":{let a=l.indexOf(e.currentTarget)-1;n=l[a]??l[l.length-1]}}n?.focus()};return(0,r.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":n},e),children:s.map(({value:e,label:n,attributes:t})=>(0,r.jsx)("li",{role:"tab",tabIndex:a===e?0:-1,"aria-selected":a===e,ref:e=>{l.push(e)},onKeyDown:d,onClick:u,...t,className:(0,i.Z)("tabs__item","tabItem_LNqP",t?.className,{"tabs__item--active":a===e}),children:n??e},e))})}function g({lazy:e,children:n,selectedValue:a}){let o=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){let e=o.find(e=>e.props.value===a);return e?(0,t.cloneElement)(e,{className:(0,i.Z)("margin-top--md",e.props.className)}):null}return(0,r.jsx)("div",{className:"margin-top--md",children:o.map((e,n)=>(0,t.cloneElement)(e,{key:n,hidden:e.props.value!==a}))})}function b(e){let n=function(e){let{defaultValue:n,queryString:a=!1,groupId:r}=e,i=function(e){let{values:n,children:a}=e;return(0,t.useMemo)(()=>{let e=n??p(a).map(({props:{value:e,label:n,attributes:a,default:r}})=>({value:e,label:n,attributes:a,default:r})),r=(0,u.lx)(e,(e,n)=>e.value===n.value);if(r.length>0)throw Error(`Docusaurus error: Duplicate values "${r.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`);return e},[n,a])}(e),[o,m]=(0,t.useState)(()=>(function({defaultValue:e,tabValues:n}){if(0===n.length)throw Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!h({value:e,tabValues:n}))throw Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}let a=n.find(e=>e.default)??n[0];if(!a)throw Error("Unexpected error: 0 tabValues");return a.value})({defaultValue:n,tabValues:i})),[f,g]=function({queryString:e=!1,groupId:n}){let a=(0,s.k6)(),r=function({queryString:e=!1,groupId:n}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,c._X)(r),(0,t.useCallback)(e=>{if(!r)return;let n=new URLSearchParams(a.location.search);n.set(r,e),a.replace({...a.location,search:n.toString()})},[r,a])]}({queryString:a,groupId:r}),[b,v]=function({groupId:e}){let n=e?`docusaurus.tab.${e}`:null,[a,r]=(0,d.Nk)(n);return[a,(0,t.useCallback)(e=>{n&&r.set(e)},[n,r])]}({groupId:r}),C=(()=>{let e=f??b;return h({value:e,tabValues:i})?e:null})();return(0,l.Z)(()=>{C&&m(C)},[C]),{selectedValue:o,selectValue:(0,t.useCallback)(e=>{if(!h({value:e,tabValues:i}))throw Error(`Can't select invalid tab value=${e}`);m(e),g(e),v(e)},[g,v,i]),tabValues:i}}(e);return(0,r.jsxs)("div",{className:(0,i.Z)("tabs-container","tabList__CuJ"),children:[(0,r.jsx)(f,{...n,...e}),(0,r.jsx)(g,{...n,...e})]})}function v(e){let n=(0,m.Z)();return(0,r.jsx)(b,{...e,children:p(e.children)},String(n))}}}]);