"use strict";(self.webpackChunkada_lang_io=self.webpackChunkada_lang_io||[]).push([[2198],{8041:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>x,contentTitle:()=>A,default:()=>u,frontMatter:()=>h,metadata:()=>r,toc:()=>j});const r=JSON.parse('{"id":"arm/AA-J/AA-J.8","title":"J.8. Mod Clauses","description":"This Reference Manual output has not been verified,","source":"@site/docs/arm/AA-J/AA-J.8.mdx","sourceDirName":"arm/AA-J","slug":"/arm/AA-J/AA-J.8","permalink":"/docs/arm/AA-J/AA-J.8","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":201,"frontMatter":{"sidebar_position":201},"sidebar":"referenceManualSidebar","previous":{"title":"J.7. At Clauses","permalink":"/docs/arm/AA-J/AA-J.7"},"next":{"title":"J.9. The Storage_Size Attribute","permalink":"/docs/arm/AA-J/AA-J.9"}}');var a=s(4848),i=s(8453),d=s(3204),t=s(4220),c=s(8069),o=s(8011),l=s(6465);const h={sidebar_position:201},A="J.8. Mod Clauses",x={},j=[{value:"Syntax",id:"syntax",level:4},{value:"Static Semantics",id:"static-semantics",level:4},{value:"Wording Changes from Ada 83",id:"wording-changes-from-ada-83",level:4}];function m(e){const n={a:"a",admonition:"admonition",h1:"h1",h4:"h4",header:"header",p:"p",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"j8-mod-clauses",children:"J.8. Mod Clauses"})}),"\n",(0,a.jsx)(n.admonition,{type:"danger",children:(0,a.jsxs)(n.p,{children:["This Reference Manual output has not been verified,\nand may contain omissions or errors.\nReport any problems on the ",(0,a.jsx)(n.a,{href:"https://github.com/ada-lang-io/ada-lang-io/issues/20",children:"tracking issue"})]})}),"\n","\n",(0,a.jsx)(n.h4,{id:"syntax",children:"Syntax"}),"\n",(0,a.jsx)(o.A,{children:"1"}),"\n",(0,a.jsx)(c.A,{children:(0,a.jsxs)(n.p,{children:[(0,a.jsxs)("code",{children:["mod","_","clause"]}),(0,a.jsx)("a",{id:"S0369"}),(0,a.jsx)("code",{children:" ::= "}),(0,a.jsx)("b",{children:"at"})," ",(0,a.jsx)("b",{children:"mod"})," ",(0,a.jsxs)("i",{children:["static","_"]}),(0,a.jsx)("code",{children:(0,a.jsx)("a",{href:"/docs/arm/AA-4/AA-4.4#S0132",children:"expression"})}),";",(0,a.jsx)("br",{})]})}),"\n",(0,a.jsx)(n.h4,{id:"static-semantics",children:"Static Semantics"}),"\n",(0,a.jsx)(o.A,{children:"2"}),"\n",(0,a.jsxs)("p",{children:["A ",(0,a.jsx)("code",{children:(0,a.jsx)("a",{href:"/docs/arm/AA-13/AA-13.5#S0352",children:"record_representation_clause"})})," of the form: ",(0,a.jsx)("br",{})]}),"\n",(0,a.jsx)(o.A,{children:"3/3"}),"\n",(0,a.jsx)(l.A,{items:["AI05-0092-1"]}),"\n",(0,a.jsx)(c.A,{language:"ada",children:(0,a.jsxs)(n.p,{children:["for r use","\n","    record at mod a;","\n","        ...","\n","    end record;","\n"]})}),"\n",(0,a.jsx)(o.A,{children:"4"}),"\n",(0,a.jsxs)("p",{children:["is equivalent to: ",(0,a.jsx)("br",{})]}),"\n",(0,a.jsx)(o.A,{children:"5"}),"\n",(0,a.jsx)(c.A,{language:"ada",children:(0,a.jsxs)(n.p,{children:["for r'Alignment use a;","\n","for r use","\n","    record","\n","        ...","\n","    end record;","\n"]})}),"\n",(0,a.jsxs)(t.A,{children:[(0,a.jsx)(o.A,{children:"5.a"}),(0,a.jsx)(d.A,{type:"aarm",aarm:"reason",children:(0,a.jsxs)(n.p,{children:[(0,a.jsx)("b",{}),"The preferred syntax for specifying the alignment of an entity is an ",(0,a.jsx)("code",{children:(0,a.jsx)("a",{href:"/docs/arm/AA-13/AA-13.3#S0349",children:"attribute_definition_clause"})})," specifying the Alignment attribute. Therefore, the special-purpose ",(0,a.jsx)("code",{children:(0,a.jsx)("a",{href:"/docs/arm/AA-J/AA-J.8#S0369",children:"mod_clause"})})," syntax is now obsolete.",(0,a.jsx)("br",{})]})})]}),"\n",(0,a.jsxs)(t.A,{children:[(0,a.jsx)(o.A,{children:"5.b"}),(0,a.jsx)(d.A,{type:"aarm",aarm:"note",children:(0,a.jsxs)(n.p,{children:["The above equivalence implies, for example, that it is illegal to give both a ",(0,a.jsx)("code",{children:(0,a.jsx)("a",{href:"/docs/arm/AA-J/AA-J.8#S0369",children:"mod_clause"})})," and an ",(0,a.jsx)("code",{children:(0,a.jsx)("a",{href:"/docs/arm/AA-13/AA-13.3#S0349",children:"attribute_definition_clause"})})," specifying the Alignment attribute for the same type. ",(0,a.jsx)("br",{})]})})]}),"\n",(0,a.jsx)(t.A,{children:(0,a.jsx)(n.h4,{id:"wording-changes-from-ada-83",children:"Wording Changes from Ada 83"})}),"\n",(0,a.jsxs)(t.A,{children:[(0,a.jsx)(o.A,{children:"5.c"}),(0,a.jsx)(d.A,{type:"aarm",aarm:"note",children:(0,a.jsxs)(n.p,{children:["Ada 83's ",(0,a.jsxs)("code",{children:["alignment","_","clause"]})," is now called a ",(0,a.jsx)("code",{children:(0,a.jsx)("a",{href:"/docs/arm/AA-J/AA-J.8#S0369",children:"mod_clause"})})," to avoid confusion with the new term \u201cAlignment clause\u201d (that is, an ",(0,a.jsx)("code",{children:(0,a.jsx)("a",{href:"/docs/arm/AA-13/AA-13.3#S0349",children:"attribute_definition_clause"})})," for the Alignment attribute). ",(0,a.jsx)("br",{})]})})]})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(m,{...e})}):m(e)}}}]);